<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8c_source" xml:lang="en-US">
<title>main.c</title>
<indexterm><primary>C:/Users/dayton.flores/OneDrive/Documents/School/CU/ECEN 5803/Project 1/Module 1/Code2/sqrt_approx/main.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_main_8c_source_1l00001"/>00001 <emphasis role="comment">/*----------------------------------------------------------------------------</emphasis>
<anchor xml:id="_main_8c_source_1l00002"/>00002 <emphasis role="comment">LAB&#32;EXERCISE&#32;5.2&#32;-&#32;SQUARE&#32;ROOT&#32;APPROXIMATION</emphasis>
<anchor xml:id="_main_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;----------------------------------------</emphasis>
<anchor xml:id="_main_8c_source_1l00004"/>00004 <emphasis role="comment">Write&#32;an&#32;assembly&#32;code&#32;subroutine&#32;to&#32;approximate&#32;the&#32;square&#32;root&#32;of&#32;an&#32;</emphasis>
<anchor xml:id="_main_8c_source_1l00005"/>00005 <emphasis role="comment">argument&#32;using&#32;the&#32;bisection&#32;method.&#32;All&#32;math&#32;is&#32;done&#32;with&#32;integers,&#32;so&#32;the&#32;</emphasis>
<anchor xml:id="_main_8c_source_1l00006"/>00006 <emphasis role="comment">resulting&#32;square&#32;root&#32;will&#32;also&#32;be&#32;an&#32;integer</emphasis>
<anchor xml:id="_main_8c_source_1l00007"/>00007 <emphasis role="comment"></emphasis>
<anchor xml:id="_main_8c_source_1l00008"/>00008 <emphasis role="comment">GOOD&#32;LUCK!</emphasis>
<anchor xml:id="_main_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_main_8c_source_1l00010"/>00010 
<anchor xml:id="_main_8c_source_1l00028"/><link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">00028</link> __asm&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(<emphasis role="keywordtype">int</emphasis>&#32;x){
<anchor xml:id="_main_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;set&#32;initial&#32;old&#32;c&#32;+&#32;new&#32;c&#32;midpoints&#32;in&#32;Bisection&#32;Method&#32;to&#32;0</emphasis>
<anchor xml:id="_main_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r4,&#32;#0
<anchor xml:id="_main_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r5,&#32;#0
<anchor xml:id="_main_8c_source_1l00032"/>00032 
<anchor xml:id="_main_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;if&#32;input&#32;is&#32;0,&#32;then&#32;square&#32;root&#32;is&#32;0&#32;so&#32;branch&#32;to&#32;done</emphasis>
<anchor xml:id="_main_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;CMP&#32;&#32;&#32;&#32;&#32;r0,&#32;#0
<anchor xml:id="_main_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;BEQ&#32;&#32;&#32;&#32;&#32;done
<anchor xml:id="_main_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;
<anchor xml:id="_main_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;for&#32;dividing&#32;by&#32;2&#32;when&#32;finding&#32;midpoint&#32;c</emphasis>
<anchor xml:id="_main_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r1,&#32;#2
<anchor xml:id="_main_8c_source_1l00039"/>00039 
<anchor xml:id="_main_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;set&#32;lower&#32;interval&#32;bound&#32;a&#32;to&#32;sqrt&#32;of&#32;min&#32;32-bit&#32;value</emphasis>
<anchor xml:id="_main_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;set&#32;upper&#32;interval&#32;bound&#32;b&#32;to&#32;sqrt&#32;of&#32;max&#32;32-bit&#32;value</emphasis>
<anchor xml:id="_main_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r2,&#32;#0
<anchor xml:id="_main_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r3,&#32;#256
<anchor xml:id="_main_8c_source_1l00044"/>00044 
<anchor xml:id="_main_8c_source_1l00045"/>00045 loop
<anchor xml:id="_main_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;backup&#32;midpoint&#32;c&#32;to&#32;old&#32;c</emphasis>
<anchor xml:id="_main_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r5,&#32;r4
<anchor xml:id="_main_8c_source_1l00048"/>00048 
<anchor xml:id="_main_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;calculate&#32;new&#32;c&#32;=&#32;(a&#32;+&#32;b)/2&#32;</emphasis>
<anchor xml:id="_main_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;ADDS&#32;&#32;&#32;&#32;r4,&#32;r2,&#32;r3
<anchor xml:id="_main_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;UDIV&#32;&#32;&#32;&#32;r4,&#32;r4,&#32;r1
<anchor xml:id="_main_8c_source_1l00052"/>00052 
<anchor xml:id="_main_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;if&#32;new&#32;c^2&#32;equals&#32;input&#32;x,&#32;we&#32;found</emphasis>
<anchor xml:id="_main_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;the&#32;exact&#32;integer&#32;square&#32;root&#32;so&#32;branch&#32;to&#32;done</emphasis>
<anchor xml:id="_main_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;MUL&#32;&#32;&#32;&#32;&#32;r6,&#32;r4,&#32;r4
<anchor xml:id="_main_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;CMP&#32;&#32;&#32;&#32;&#32;r6,&#32;r0
<anchor xml:id="_main_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;BEQ&#32;&#32;&#32;&#32;&#32;done
<anchor xml:id="_main_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;
<anchor xml:id="_main_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;else&#32;if&#32;new&#32;c^2&#32;less&#32;than&#32;input&#32;x,&#32;set</emphasis>
<anchor xml:id="_main_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;the&#32;lower&#32;bound&#32;a&#32;to&#32;new&#32;c&#32;and&#32;loop&#32;again</emphasis>
<anchor xml:id="_main_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;BLT&#32;&#32;&#32;&#32;&#32;setLowerBound
<anchor xml:id="_main_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;
<anchor xml:id="_main_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;else&#32;if&#32;new&#32;c^2&#32;greater&#32;than&#32;input&#32;x,&#32;set</emphasis>
<anchor xml:id="_main_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;the&#32;upper&#32;bound&#32;b&#32;to&#32;new&#32;c&#32;and&#32;loop&#32;again</emphasis>
<anchor xml:id="_main_8c_source_1l00065"/>00065 &#32;&#32;&#32;&#32;BGT&#32;&#32;&#32;&#32;&#32;setUpperBound
<anchor xml:id="_main_8c_source_1l00066"/>00066 
<anchor xml:id="_main_8c_source_1l00067"/>00067 setLowerBound
<anchor xml:id="_main_8c_source_1l00068"/>00068 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r2,&#32;r4
<anchor xml:id="_main_8c_source_1l00069"/>00069 &#32;&#32;&#32;&#32;B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkOldCAndNewC
<anchor xml:id="_main_8c_source_1l00070"/>00070 
<anchor xml:id="_main_8c_source_1l00071"/>00071 setUpperBound
<anchor xml:id="_main_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r3,&#32;r4
<anchor xml:id="_main_8c_source_1l00073"/>00073 
<anchor xml:id="_main_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;if&#32;old&#32;c&#32;==&#32;new&#32;c,&#32;we&#32;cannot&#32;get&#32;a&#32;closer</emphasis>
<anchor xml:id="_main_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;approximation&#32;so&#32;branch&#32;to&#32;done</emphasis>
<anchor xml:id="_main_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;;<emphasis role="comment">//</emphasis>
<anchor xml:id="_main_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;else,&#32;try&#32;again&#32;with&#32;new&#32;bounds&#32;a&#32;and&#32;b</emphasis>
<anchor xml:id="_main_8c_source_1l00078"/>00078 checkOldCAndNewC
<anchor xml:id="_main_8c_source_1l00079"/>00079 &#32;&#32;&#32;&#32;CMP&#32;&#32;&#32;&#32;&#32;r4,&#32;r5
<anchor xml:id="_main_8c_source_1l00080"/>00080 &#32;&#32;&#32;&#32;BEQ&#32;&#32;&#32;&#32;&#32;done
<anchor xml:id="_main_8c_source_1l00081"/>00081 &#32;&#32;&#32;&#32;B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loop
<anchor xml:id="_main_8c_source_1l00082"/>00082 
<anchor xml:id="_main_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;found&#32;integer&#32;approximation&#32;of&#32;square&#32;root</emphasis>
<anchor xml:id="_main_8c_source_1l00084"/>00084 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;so&#32;store&#32;value&#32;in&#32;return&#32;register&#32;r0</emphasis>
<anchor xml:id="_main_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;;<emphasis role="comment">//&#32;and&#32;branch&#32;with&#32;exchange&#32;to&#32;link&#32;register</emphasis>
<anchor xml:id="_main_8c_source_1l00086"/>00086 done
<anchor xml:id="_main_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;MOV&#32;&#32;&#32;&#32;&#32;r0,&#32;r4
<anchor xml:id="_main_8c_source_1l00088"/>00088 &#32;&#32;&#32;&#32;BX&#32;&#32;&#32;&#32;&#32;&#32;lr
<anchor xml:id="_main_8c_source_1l00089"/>00089 }
<anchor xml:id="_main_8c_source_1l00090"/>00090 
<anchor xml:id="_main_8c_source_1l00091"/>00091 <emphasis role="comment">/*----------------------------------------------------------------------------</emphasis>
<anchor xml:id="_main_8c_source_1l00092"/>00092 <emphasis role="comment">&#32;MAIN&#32;function</emphasis>
<anchor xml:id="_main_8c_source_1l00093"/>00093 <emphasis role="comment">&#32;*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_main_8c_source_1l00094"/><link linkend="_main_8c_1a840291bc02cba5474a4cb46a9b9566fe">00094</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_main_8c_1a840291bc02cba5474a4cb46a9b9566fe">main</link>(<emphasis role="keywordtype">void</emphasis>){
<anchor xml:id="_main_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;j=0;
<anchor xml:id="_main_8c_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="_main_8c_source_1l00097"/>00097 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(0);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;0</emphasis>
<anchor xml:id="_main_8c_source_1l00098"/>00098 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(25);&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;5</emphasis>
<anchor xml:id="_main_8c_source_1l00099"/>00099 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(133);&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;11</emphasis>
<anchor xml:id="_main_8c_source_1l00100"/>00100 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;1&#32;(0x00000001)</emphasis>
<anchor xml:id="_main_8c_source_1l00101"/>00101 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;2&#32;(0x00000002)</emphasis>
<anchor xml:id="_main_8c_source_1l00102"/>00102 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(22);&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;4&#32;(0x00000004)</emphasis>
<anchor xml:id="_main_8c_source_1l00103"/>00103 &#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(121);&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;11&#32;(0x0000000B)</emphasis>
<anchor xml:id="_main_8c_source_1l00104"/>00104 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&lt;10000;&#32;i++){
<anchor xml:id="_main_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;<link linkend="_main_8c_1ab530b5c5abd6ec3f886f2b48e3905ee1">my_sqrt</link>(i);
<anchor xml:id="_main_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;j+=r;
<anchor xml:id="_main_8c_source_1l00107"/>00107 &#32;&#32;}
<anchor xml:id="_main_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(1)
<anchor xml:id="_main_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;;
<anchor xml:id="_main_8c_source_1l00110"/>00110 }
<anchor xml:id="_main_8c_source_1l00111"/>00111 
<anchor xml:id="_main_8c_source_1l00112"/>00112 <emphasis role="comment">//&#32;*******************************ARM&#32;University&#32;Program&#32;Copyright&#32;(c)&#32;ARM&#32;Ltd&#32;2014*************************************</emphasis>
</programlisting></section>
