<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___s_t_m32_f4xx___h_a_l" xml:lang="en-US">
<title>STM32F4xx_HAL</title>
<indexterm><primary>STM32F4xx_HAL</primary></indexterm>
<simplesect>
    <title>Modules    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group___t_i_m">TIM</link></para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_ex">TIMEx</link></para>
</listitem>
            <listitem><para><link linkend="_group___u_s_b___core">USB_Core</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1b288eb68eb52c97b8d187cdd6e9088f">HAL_TIM_Base_Init</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaaf97adbc39e48456a1c83c54895de83b">HAL_TIM_Base_DeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga818f4d5d1e2f417438d281b4ac9efb9c">HAL_TIM_Base_MspInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga13352a6c9cb3225511e5f29dbb894e84">HAL_TIM_Base_MspDeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaf7e5ee80207a338050413e14f7bd24f9">HAL_TIM_Base_Start</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga78697261126cd2facc463b81e8c4b238">HAL_TIM_Base_Stop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gae517d80e2ac713069767df8e8915971e">HAL_TIM_Base_Start_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga19443605c97f15b5ede7d8337534ece4">HAL_TIM_Base_Stop_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8246aece4afe559642a6da298f7b157a">HAL_TIM_Base_Start_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t *pData, uint16_t Length)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga7673776de6e35f5cbe887e62e13e87b5">HAL_TIM_Base_Stop_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga7541c3db71ec7c0b4b54afa473bdb19a">HAL_TIM_OC_Init</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga79f0c3e3015a81c535a578edc2fee8ca">HAL_TIM_OC_DeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1gab7ea7555b79c4544ad90dc6d063d2f13">HAL_TIM_OC_MspInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga2f01705566708fcaceb32bcad01f7498">HAL_TIM_OC_MspDeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga5dbbafc75b341b79d29bc41f8ec15492">HAL_TIM_OC_Start</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga9cb1f62afb99aea0db8cc28b378b68ad">HAL_TIM_OC_Stop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gad3116f3b344392f7b947ff1218ba9ed8">HAL_TIM_OC_Start_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gacc324ef35c0b207a8331c657d86fc1bd">HAL_TIM_OC_Stop_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6f961349029a84317b7734abbfb9a02c">HAL_TIM_OC_Start_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel, uint32_t *pData, uint16_t Length)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga27f1f66d2d38ec428580a5feb3628c48">HAL_TIM_OC_Stop_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga25824b2eed564cc37a8983b99a83bdc7">HAL_TIM_PWM_Init</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga5bb7b197ace5bab9ef120163ff1520bd">HAL_TIM_PWM_DeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaf94d3d2003a4eebed73744ccd5c85974">HAL_TIM_PWM_MspInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga3abff1ab9a918c30db77c7890e6e2b07">HAL_TIM_PWM_MspDeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga11da9bda53a5d21c293bb01da91e592d">HAL_TIM_PWM_Start</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gae087011858379feeb770ecb4568829d3">HAL_TIM_PWM_Stop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaca1f5fbc35101d0fc7e8af31c9a0c26c">HAL_TIM_PWM_Start_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga0559af125dc5fb2bb183a6a4b86808b5">HAL_TIM_PWM_Stop_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaa4b542b3c0ae347ea580c9e7c8e88b17">HAL_TIM_PWM_Start_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel, uint32_t *pData, uint16_t Length)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gad77367f9b8d8d17842a913f7d6ce274b">HAL_TIM_PWM_Stop_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga342aa1098891f55f59c7867afff589c1">HAL_TIM_IC_Init</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga2fc9af96c4ec45ba9057e182012f3586">HAL_TIM_IC_DeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga202723f23bc46b29b16145f9cceabbbb">HAL_TIM_IC_MspInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1gad1aa484ec0f0559908d9d8128614e7ad">HAL_TIM_IC_MspDeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaab393018ca6f8fad04a815feb1796ce7">HAL_TIM_IC_Start</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1b5edb103cb27dbd5380e9b24d12658f">HAL_TIM_IC_Stop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac0e3515f374ec6b9d30609cd683649d6">HAL_TIM_IC_Start_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaf5664e207667c99ef50378813056e5f6">HAL_TIM_IC_Stop_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac3b7deffff43a8bdc3e2eea42115efff">HAL_TIM_IC_Start_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel, uint32_t *pData, uint16_t Length)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8e7dc17f058ef9c826774436d68f80b5">HAL_TIM_IC_Stop_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga476d67a220c23ebdc69fac7b09dbaa72">HAL_TIM_OnePulse_Init</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t OnePulseMode)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gae60b468b11199522c6c83a943439c7b7">HAL_TIM_OnePulse_DeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6579726753cb2b769a21d10bec75219f">HAL_TIM_OnePulse_MspInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga9b73c7135e8348613f30f3a4d84478e7">HAL_TIM_OnePulse_MspDeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga40e43e4f2484df59079e0316d6a6fd23">HAL_TIM_OnePulse_Start</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t OutputChannel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac7744a2a063e8bf2909319d70fc764fd">HAL_TIM_OnePulse_Stop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t OutputChannel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gafcde302725d20c6f992f26660d491bb9">HAL_TIM_OnePulse_Start_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t OutputChannel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6bbce5414404228fde71dadd8d1cddc7">HAL_TIM_OnePulse_Stop_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t OutputChannel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga16beb79937c32f993bbc4fdc1e492c52">HAL_TIM_Encoder_Init</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___encoder___init_type_def">TIM_Encoder_InitTypeDef</link> *sConfig)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaaf99281fd7635e20c08e48bfc9ea11e3">HAL_TIM_Encoder_DeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1a8e1103bfcc56c2626ed5cf546391d1">HAL_TIM_Encoder_MspInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga77c8216735a5b1374ea948737eed8a18">HAL_TIM_Encoder_MspDeInit</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6450b21fa2bf6bf71a0f85c0a1519e21">HAL_TIM_Encoder_Start</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga2d603e9167803b080be1f2915e972bbf">HAL_TIM_Encoder_Stop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga9a573a3203752709841acab8412f541e">HAL_TIM_Encoder_Start_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac07923b4764255a1e0b82c975689542d">HAL_TIM_Encoder_Stop_IT</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8b9798534ad0917d31d581afe720d8cf">HAL_TIM_Encoder_Start_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel, uint32_t *pData1, uint32_t *pData2, uint16_t Length)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga12ea48505e269532feff5b64f605b56f">HAL_TIM_Encoder_Stop_DMA</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga2dc3ef34340412aa8a01d734d2ff8f88">HAL_TIM_IRQHandler</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6e22dfc93b7569da087a115348c3182f">HAL_TIM_OC_ConfigChannel</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link> *sConfig, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac14a4959f65f51a54e8ff511242e2131">HAL_TIM_PWM_ConfigChannel</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link> *sConfig, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga34805dabaf748c6eb823275dad2f19f5">HAL_TIM_IC_ConfigChannel</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___i_c___init_type_def">TIM_IC_InitTypeDef</link> *sConfig, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaefb1913440053c45a4f9a50a8c05c6be">HAL_TIM_OnePulse_ConfigChannel</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___one_pulse___init_type_def">TIM_OnePulse_InitTypeDef</link> *sConfig, uint32_t OutputChannel, uint32_t InputChannel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga0b960485369b4ebb1e5d41e5e9e49770">HAL_TIM_ConfigOCrefClear</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___clear_input_config_type_def">TIM_ClearInputConfigTypeDef</link> *sClearInputConfig, uint32_t Channel)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga43403d13849f71285ea1da3f3cb1381f">HAL_TIM_ConfigClockSource</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___clock_config_type_def">TIM_ClockConfigTypeDef</link> *sClockSourceConfig)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga7dfab2adafd2f2e315a9531f1150c201">HAL_TIM_ConfigTI1Input</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t TI1_Selection)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga07f536c10b542bc9695f23b1e84b5fce">HAL_TIM_SlaveConfigSynchronization</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, <link linkend="_struct_t_i_m___slave_config_type_def">TIM_SlaveConfigTypeDef</link> *sSlaveConfig)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8d1a48bb07dcf9030de10b9c6918087c">HAL_TIM_DMABurst_WriteStart</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t BurstBaseAddress, uint32_t BurstRequestSrc, uint32_t *BurstBuffer, uint32_t BurstLength)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8f5649baaf219f2559bbe9e8e2c3658e">HAL_TIM_DMABurst_WriteStop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t BurstRequestSrc)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga39c612c473747448615e2e3cb2668224">HAL_TIM_DMABurst_ReadStart</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t BurstBaseAddress, uint32_t BurstRequestSrc, uint32_t *BurstBuffer, uint32_t BurstLength)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga41cfa290ee87229cba1962e78e2a9d01">HAL_TIM_DMABurst_ReadStop</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t BurstRequestSrc)</para>
</listitem>
            <listitem><para><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gab4a60fe7cbb64a321bdce2ee1b9c8730">HAL_TIM_GenerateEvent</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t EventSource)</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6528480e73e4e51d5ce8aaca00d64d13">HAL_TIM_ReadCapturedValue</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim, uint32_t Channel)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8a3b0ad512a6e6c6157440b68d395eac">HAL_TIM_PeriodElapsedCallback</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1fc39499fe9db8b7fb88005e9f107a36">HAL_TIM_OC_DelayElapsedCallback</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga77a2401a35ddd9bd0b8fc28331b81381">HAL_TIM_IC_CaptureCallback</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga07e5fc4d223b16bec2fd6bed547cf91d">HAL_TIM_PWM_PulseFinishedCallback</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga189577c72b1963671b26820d8161d678">HAL_TIM_TriggerCallback</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6f0868af383d592940700dbb52fac016">HAL_TIM_ErrorCallback</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gabf71ed10e30d23139f7b327878901c89">HAL_TIM_Base_GetState</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga9dbca6a4ca949a13fda097d9cc7959a0">HAL_TIM_OC_GetState</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga207c64afb37d15e35b5380d4805e6eaf">HAL_TIM_PWM_GetState</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8f6d20b8e4f3255f1f0f3ced8ea684e8">HAL_TIM_IC_GetState</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gab66fcfc1ee00512f50ef56f4397a0e9f">HAL_TIM_OnePulse_GetState</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1925971e419b85db7fed57919ba765ef">HAL_TIM_Encoder_GetState</link> (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> *htim)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga057e4b4da135186e8fb88327c5fd0684">TIM_Base_SetConfig</link> (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> *TIMx, <link linkend="_struct_t_i_m___base___init_type_def">TIM_Base_InitTypeDef</link> *Structure)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga83c847710a92f0558c862dd0dc889ff3">TIM_TI1_SetConfig</link> (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection, uint32_t TIM_ICFilter)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga20370137a5c000fa4739d30669e67b8c">TIM_OC2_SetConfig</link> (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> *TIMx, <link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link> *OC_Config)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga211c36f76c4dabfadb62b416060b11be">HAL_TIM_DMADelayPulseCplt</link> (<link linkend="_group___d_m_a_1ga41b754a906b86bce54dc79938970138b">DMA_HandleTypeDef</link> *hdma)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1gadf70f17bbf6cdfc07be28900ebc1b373">HAL_TIM_DMAError</link> (<link linkend="_group___d_m_a_1ga41b754a906b86bce54dc79938970138b">DMA_HandleTypeDef</link> *hdma)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga8af2d1160ec4a4ca408acf172e80a0a4">HAL_TIM_DMACaptureCplt</link> (<link linkend="_group___d_m_a_1ga41b754a906b86bce54dc79938970138b">DMA_HandleTypeDef</link> *hdma)</para>
</listitem>
            <listitem><para>void <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga7fcc6d5ca311c37f5d0250687c899924">TIM_CCxChannelCmd</link> (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> *TIMx, uint32_t Channel, uint32_t ChannelState)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga3e066526cc6acb4c3eb9ecd1ee7e881c">dev_endpoints</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1893da3bf227c69993aa67797e3825dd">Host_channels</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga220859a8b5da0232739a11cbe7f79fc5">speed</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga3f852155ae5abdfbdbe9865383780eb1">dma_enable</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga99c6050b5a0c8e920d675437f1077526">ep0_mps</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac74d5572af6a1a9564cab48a9bdd7e4d">phy_itface</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaec30c1f869d10e0b14b26f1e5e2024c8">Sof_enable</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gab0b1e1f806ac5f343c9f468c08958fcc">low_power_enable</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga15a4db2874f8f0655d5b0858ca2f3346">vbus_sensing_enable</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gad3da23816bc3727e3bb800bb9fe6dc75">use_dedicated_ep1</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga241efb6152a059bb5d821b08fb68cf1a">use_external_vbus</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gabea371f9030e15a5d2a4c181576833d8">num</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1b6103f5908a43d31b25bc3ca21f60ae">is_in</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga5d7f3c5ec11e8d2c50d03e64182f037c">is_stall</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1d127017fb298b889f4ba24752d08b8e">type</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga6ba2ee43a539a0b62e610ded1ba2dd1b">data_pid_start</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga72cbbcd19b06fa662d57aea1e9480808">even_odd_frame</link></para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaae1aeb1d778729ff805bba5b0aee9742">tx_fifo_num</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga876f0bbf157a6bceb63630c99da8b077">maxpacket</link></para>
</listitem>
            <listitem><para>uint8_t * <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga81d9dc7c57d086dd4e35361f4b782ebd">xfer_buff</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaa4264b8ef473c4df74ee6a5160717451">dma_addr</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga4a9555456ad0e64b61e2609b9bfed9f7">xfer_len</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac67d8b3019f1fe22eb6fa889594c4adc">xfer_count</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga1997a5306d6d04a9ce867303d1a6d9e1">dev_addr</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga7db02d10872cda42716be0141e63fe12">ch_num</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga0eb60627df64d4e20dc3a36f3c1af073">ep_num</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac55364ab232bbd4bd61cb440a372d3f4">ep_is_in</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaae32029df16a54aa86c0aec2df9f7bb7">speed</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac246b3387fee295f1f5927592bed589f">do_ping</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga7983b3f5be33e9e129c5a58f1f1df29f">process_ping</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga791714ade336270a9c8fafef311b28f0">ep_type</link></para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga290246297f8942d21b7519b1ef52844f">max_packet</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac63588c3fc1becf689a6675898c2e480">data_pid</link></para>
</listitem>
            <listitem><para>uint8_t * <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga81d9dc7c57d086dd4e35361f4b782ebd">xfer_buff</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga4a9555456ad0e64b61e2609b9bfed9f7">xfer_len</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gac67d8b3019f1fe22eb6fa889594c4adc">xfer_count</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gae12568439d6262c2fe3392f91b615b3e">toggle_in</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga44f913b85fb1e953cb4fe02015940d11">toggle_out</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1gaa4264b8ef473c4df74ee6a5160717451">dma_addr</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga3f7db8cf999eddc44dd0f9c5cadedabf">ErrCnt</link></para>
</listitem>
            <listitem><para><link linkend="_group___u_s_b___core_1ga04b2bca306495588fec3a5245daa5221">USB_OTG_URBStateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1gacc68206db8cee08ae00631698c62350c">urb_state</link></para>
</listitem>
            <listitem><para><link linkend="_group___u_s_b___core_1ga8fa88c2e8e5fe41147028ba11af65294">USB_OTG_HCStateTypeDef</link> <link linkend="_group___s_t_m32_f4xx___h_a_l_1ga2b8ce5ad330b7da2b268463d4151d060">state</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaaf97adbc39e48456a1c83c54895de83b"/><section>
    <title>HAL_TIM_Base_DeInit()</title>
<indexterm><primary>HAL_TIM_Base_DeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_DeInit</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_DeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gabf71ed10e30d23139f7b327878901c89"/><section>
    <title>HAL_TIM_Base_GetState()</title>
<indexterm><primary>HAL_TIM_Base_GetState</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_GetState</secondary></indexterm>
<para><computeroutput><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> HAL_TIM_Base_GetState (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1b288eb68eb52c97b8d187cdd6e9088f"/><section>
    <title>HAL_TIM_Base_Init()</title>
<indexterm><primary>HAL_TIM_Base_Init</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Init</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Init (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga13352a6c9cb3225511e5f29dbb894e84"/><section>
    <title>HAL_TIM_Base_MspDeInit()</title>
<indexterm><primary>HAL_TIM_Base_MspDeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_MspDeInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_Base_MspDeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga818f4d5d1e2f417438d281b4ac9efb9c"/><section>
    <title>HAL_TIM_Base_MspInit()</title>
<indexterm><primary>HAL_TIM_Base_MspInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_MspInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_Base_MspInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaf7e5ee80207a338050413e14f7bd24f9"/><section>
    <title>HAL_TIM_Base_Start()</title>
<indexterm><primary>HAL_TIM_Base_Start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Start</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Start (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8246aece4afe559642a6da298f7b157a"/><section>
    <title>HAL_TIM_Base_Start_DMA()</title>
<indexterm><primary>HAL_TIM_Base_Start_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Start_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Start_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t * pData, uint16_t Length)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gae517d80e2ac713069767df8e8915971e"/><section>
    <title>HAL_TIM_Base_Start_IT()</title>
<indexterm><primary>HAL_TIM_Base_Start_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Start_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Start_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga78697261126cd2facc463b81e8c4b238"/><section>
    <title>HAL_TIM_Base_Stop()</title>
<indexterm><primary>HAL_TIM_Base_Stop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Stop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Stop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga7673776de6e35f5cbe887e62e13e87b5"/><section>
    <title>HAL_TIM_Base_Stop_DMA()</title>
<indexterm><primary>HAL_TIM_Base_Stop_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Stop_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Stop_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga19443605c97f15b5ede7d8337534ece4"/><section>
    <title>HAL_TIM_Base_Stop_IT()</title>
<indexterm><primary>HAL_TIM_Base_Stop_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Base_Stop_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Base_Stop_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga43403d13849f71285ea1da3f3cb1381f"/><section>
    <title>HAL_TIM_ConfigClockSource()</title>
<indexterm><primary>HAL_TIM_ConfigClockSource</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_ConfigClockSource</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_ConfigClockSource (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___clock_config_type_def">TIM_ClockConfigTypeDef</link> * sClockSourceConfig)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga0b960485369b4ebb1e5d41e5e9e49770"/><section>
    <title>HAL_TIM_ConfigOCrefClear()</title>
<indexterm><primary>HAL_TIM_ConfigOCrefClear</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_ConfigOCrefClear</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_ConfigOCrefClear (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___clear_input_config_type_def">TIM_ClearInputConfigTypeDef</link> * sClearInputConfig, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga7dfab2adafd2f2e315a9531f1150c201"/><section>
    <title>HAL_TIM_ConfigTI1Input()</title>
<indexterm><primary>HAL_TIM_ConfigTI1Input</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_ConfigTI1Input</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_ConfigTI1Input (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t TI1_Selection)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga39c612c473747448615e2e3cb2668224"/><section>
    <title>HAL_TIM_DMABurst_ReadStart()</title>
<indexterm><primary>HAL_TIM_DMABurst_ReadStart</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMABurst_ReadStart</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_DMABurst_ReadStart (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t BurstBaseAddress, uint32_t BurstRequestSrc, uint32_t * BurstBuffer, uint32_t BurstLength)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga41cfa290ee87229cba1962e78e2a9d01"/><section>
    <title>HAL_TIM_DMABurst_ReadStop()</title>
<indexterm><primary>HAL_TIM_DMABurst_ReadStop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMABurst_ReadStop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_DMABurst_ReadStop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t BurstRequestSrc)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8d1a48bb07dcf9030de10b9c6918087c"/><section>
    <title>HAL_TIM_DMABurst_WriteStart()</title>
<indexterm><primary>HAL_TIM_DMABurst_WriteStart</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMABurst_WriteStart</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_DMABurst_WriteStart (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t BurstBaseAddress, uint32_t BurstRequestSrc, uint32_t * BurstBuffer, uint32_t BurstLength)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8f5649baaf219f2559bbe9e8e2c3658e"/><section>
    <title>HAL_TIM_DMABurst_WriteStop()</title>
<indexterm><primary>HAL_TIM_DMABurst_WriteStop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMABurst_WriteStop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_DMABurst_WriteStop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t BurstRequestSrc)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8af2d1160ec4a4ca408acf172e80a0a4"/><section>
    <title>HAL_TIM_DMACaptureCplt()</title>
<indexterm><primary>HAL_TIM_DMACaptureCplt</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMACaptureCplt</secondary></indexterm>
<para><computeroutput>void HAL_TIM_DMACaptureCplt (<link linkend="_group___d_m_a_1ga41b754a906b86bce54dc79938970138b">DMA_HandleTypeDef</link> * hdma)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga211c36f76c4dabfadb62b416060b11be"/><section>
    <title>HAL_TIM_DMADelayPulseCplt()</title>
<indexterm><primary>HAL_TIM_DMADelayPulseCplt</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMADelayPulseCplt</secondary></indexterm>
<para><computeroutput>void HAL_TIM_DMADelayPulseCplt (<link linkend="_group___d_m_a_1ga41b754a906b86bce54dc79938970138b">DMA_HandleTypeDef</link> * hdma)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gadf70f17bbf6cdfc07be28900ebc1b373"/><section>
    <title>HAL_TIM_DMAError()</title>
<indexterm><primary>HAL_TIM_DMAError</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_DMAError</secondary></indexterm>
<para><computeroutput>void HAL_TIM_DMAError (<link linkend="_group___d_m_a_1ga41b754a906b86bce54dc79938970138b">DMA_HandleTypeDef</link> * hdma)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaaf99281fd7635e20c08e48bfc9ea11e3"/><section>
    <title>HAL_TIM_Encoder_DeInit()</title>
<indexterm><primary>HAL_TIM_Encoder_DeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_DeInit</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_DeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1925971e419b85db7fed57919ba765ef"/><section>
    <title>HAL_TIM_Encoder_GetState()</title>
<indexterm><primary>HAL_TIM_Encoder_GetState</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_GetState</secondary></indexterm>
<para><computeroutput><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> HAL_TIM_Encoder_GetState (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga16beb79937c32f993bbc4fdc1e492c52"/><section>
    <title>HAL_TIM_Encoder_Init()</title>
<indexterm><primary>HAL_TIM_Encoder_Init</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Init</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Init (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___encoder___init_type_def">TIM_Encoder_InitTypeDef</link> * sConfig)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga77c8216735a5b1374ea948737eed8a18"/><section>
    <title>HAL_TIM_Encoder_MspDeInit()</title>
<indexterm><primary>HAL_TIM_Encoder_MspDeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_MspDeInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_Encoder_MspDeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1a8e1103bfcc56c2626ed5cf546391d1"/><section>
    <title>HAL_TIM_Encoder_MspInit()</title>
<indexterm><primary>HAL_TIM_Encoder_MspInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_MspInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_Encoder_MspInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6450b21fa2bf6bf71a0f85c0a1519e21"/><section>
    <title>HAL_TIM_Encoder_Start()</title>
<indexterm><primary>HAL_TIM_Encoder_Start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Start</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Start (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8b9798534ad0917d31d581afe720d8cf"/><section>
    <title>HAL_TIM_Encoder_Start_DMA()</title>
<indexterm><primary>HAL_TIM_Encoder_Start_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Start_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Start_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel, uint32_t * pData1, uint32_t * pData2, uint16_t Length)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga9a573a3203752709841acab8412f541e"/><section>
    <title>HAL_TIM_Encoder_Start_IT()</title>
<indexterm><primary>HAL_TIM_Encoder_Start_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Start_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Start_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga2d603e9167803b080be1f2915e972bbf"/><section>
    <title>HAL_TIM_Encoder_Stop()</title>
<indexterm><primary>HAL_TIM_Encoder_Stop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Stop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Stop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga12ea48505e269532feff5b64f605b56f"/><section>
    <title>HAL_TIM_Encoder_Stop_DMA()</title>
<indexterm><primary>HAL_TIM_Encoder_Stop_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Stop_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Stop_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac07923b4764255a1e0b82c975689542d"/><section>
    <title>HAL_TIM_Encoder_Stop_IT()</title>
<indexterm><primary>HAL_TIM_Encoder_Stop_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_Encoder_Stop_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_Encoder_Stop_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6f0868af383d592940700dbb52fac016"/><section>
    <title>HAL_TIM_ErrorCallback()</title>
<indexterm><primary>HAL_TIM_ErrorCallback</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_ErrorCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_ErrorCallback (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gab4a60fe7cbb64a321bdce2ee1b9c8730"/><section>
    <title>HAL_TIM_GenerateEvent()</title>
<indexterm><primary>HAL_TIM_GenerateEvent</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_GenerateEvent</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_GenerateEvent (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t EventSource)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga77a2401a35ddd9bd0b8fc28331b81381"/><section>
    <title>HAL_TIM_IC_CaptureCallback()</title>
<indexterm><primary>HAL_TIM_IC_CaptureCallback</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_CaptureCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_IC_CaptureCallback (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga34805dabaf748c6eb823275dad2f19f5"/><section>
    <title>HAL_TIM_IC_ConfigChannel()</title>
<indexterm><primary>HAL_TIM_IC_ConfigChannel</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_ConfigChannel</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_ConfigChannel (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___i_c___init_type_def">TIM_IC_InitTypeDef</link> * sConfig, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga2fc9af96c4ec45ba9057e182012f3586"/><section>
    <title>HAL_TIM_IC_DeInit()</title>
<indexterm><primary>HAL_TIM_IC_DeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_DeInit</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_DeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8f6d20b8e4f3255f1f0f3ced8ea684e8"/><section>
    <title>HAL_TIM_IC_GetState()</title>
<indexterm><primary>HAL_TIM_IC_GetState</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_GetState</secondary></indexterm>
<para><computeroutput><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> HAL_TIM_IC_GetState (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga342aa1098891f55f59c7867afff589c1"/><section>
    <title>HAL_TIM_IC_Init()</title>
<indexterm><primary>HAL_TIM_IC_Init</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Init</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Init (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gad1aa484ec0f0559908d9d8128614e7ad"/><section>
    <title>HAL_TIM_IC_MspDeInit()</title>
<indexterm><primary>HAL_TIM_IC_MspDeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_MspDeInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_IC_MspDeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga202723f23bc46b29b16145f9cceabbbb"/><section>
    <title>HAL_TIM_IC_MspInit()</title>
<indexterm><primary>HAL_TIM_IC_MspInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_MspInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_IC_MspInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaab393018ca6f8fad04a815feb1796ce7"/><section>
    <title>HAL_TIM_IC_Start()</title>
<indexterm><primary>HAL_TIM_IC_Start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Start</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Start (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac3b7deffff43a8bdc3e2eea42115efff"/><section>
    <title>HAL_TIM_IC_Start_DMA()</title>
<indexterm><primary>HAL_TIM_IC_Start_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Start_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Start_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel, uint32_t * pData, uint16_t Length)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac0e3515f374ec6b9d30609cd683649d6"/><section>
    <title>HAL_TIM_IC_Start_IT()</title>
<indexterm><primary>HAL_TIM_IC_Start_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Start_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Start_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1b5edb103cb27dbd5380e9b24d12658f"/><section>
    <title>HAL_TIM_IC_Stop()</title>
<indexterm><primary>HAL_TIM_IC_Stop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Stop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Stop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8e7dc17f058ef9c826774436d68f80b5"/><section>
    <title>HAL_TIM_IC_Stop_DMA()</title>
<indexterm><primary>HAL_TIM_IC_Stop_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Stop_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Stop_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaf5664e207667c99ef50378813056e5f6"/><section>
    <title>HAL_TIM_IC_Stop_IT()</title>
<indexterm><primary>HAL_TIM_IC_Stop_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IC_Stop_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_IC_Stop_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga2dc3ef34340412aa8a01d734d2ff8f88"/><section>
    <title>HAL_TIM_IRQHandler()</title>
<indexterm><primary>HAL_TIM_IRQHandler</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_IRQHandler</secondary></indexterm>
<para><computeroutput>void HAL_TIM_IRQHandler (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6e22dfc93b7569da087a115348c3182f"/><section>
    <title>HAL_TIM_OC_ConfigChannel()</title>
<indexterm><primary>HAL_TIM_OC_ConfigChannel</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_ConfigChannel</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_ConfigChannel (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link> * sConfig, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga79f0c3e3015a81c535a578edc2fee8ca"/><section>
    <title>HAL_TIM_OC_DeInit()</title>
<indexterm><primary>HAL_TIM_OC_DeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_DeInit</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_DeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1fc39499fe9db8b7fb88005e9f107a36"/><section>
    <title>HAL_TIM_OC_DelayElapsedCallback()</title>
<indexterm><primary>HAL_TIM_OC_DelayElapsedCallback</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_DelayElapsedCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_OC_DelayElapsedCallback (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga9dbca6a4ca949a13fda097d9cc7959a0"/><section>
    <title>HAL_TIM_OC_GetState()</title>
<indexterm><primary>HAL_TIM_OC_GetState</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_GetState</secondary></indexterm>
<para><computeroutput><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> HAL_TIM_OC_GetState (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga7541c3db71ec7c0b4b54afa473bdb19a"/><section>
    <title>HAL_TIM_OC_Init()</title>
<indexterm><primary>HAL_TIM_OC_Init</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Init</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Init (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga2f01705566708fcaceb32bcad01f7498"/><section>
    <title>HAL_TIM_OC_MspDeInit()</title>
<indexterm><primary>HAL_TIM_OC_MspDeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_MspDeInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_OC_MspDeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gab7ea7555b79c4544ad90dc6d063d2f13"/><section>
    <title>HAL_TIM_OC_MspInit()</title>
<indexterm><primary>HAL_TIM_OC_MspInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_MspInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_OC_MspInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga5dbbafc75b341b79d29bc41f8ec15492"/><section>
    <title>HAL_TIM_OC_Start()</title>
<indexterm><primary>HAL_TIM_OC_Start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Start</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Start (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6f961349029a84317b7734abbfb9a02c"/><section>
    <title>HAL_TIM_OC_Start_DMA()</title>
<indexterm><primary>HAL_TIM_OC_Start_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Start_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Start_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel, uint32_t * pData, uint16_t Length)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gad3116f3b344392f7b947ff1218ba9ed8"/><section>
    <title>HAL_TIM_OC_Start_IT()</title>
<indexterm><primary>HAL_TIM_OC_Start_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Start_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Start_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga9cb1f62afb99aea0db8cc28b378b68ad"/><section>
    <title>HAL_TIM_OC_Stop()</title>
<indexterm><primary>HAL_TIM_OC_Stop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Stop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Stop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga27f1f66d2d38ec428580a5feb3628c48"/><section>
    <title>HAL_TIM_OC_Stop_DMA()</title>
<indexterm><primary>HAL_TIM_OC_Stop_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Stop_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Stop_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gacc324ef35c0b207a8331c657d86fc1bd"/><section>
    <title>HAL_TIM_OC_Stop_IT()</title>
<indexterm><primary>HAL_TIM_OC_Stop_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OC_Stop_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OC_Stop_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaefb1913440053c45a4f9a50a8c05c6be"/><section>
    <title>HAL_TIM_OnePulse_ConfigChannel()</title>
<indexterm><primary>HAL_TIM_OnePulse_ConfigChannel</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_ConfigChannel</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_ConfigChannel (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___one_pulse___init_type_def">TIM_OnePulse_InitTypeDef</link> * sConfig, uint32_t OutputChannel, uint32_t InputChannel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gae60b468b11199522c6c83a943439c7b7"/><section>
    <title>HAL_TIM_OnePulse_DeInit()</title>
<indexterm><primary>HAL_TIM_OnePulse_DeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_DeInit</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_DeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gab66fcfc1ee00512f50ef56f4397a0e9f"/><section>
    <title>HAL_TIM_OnePulse_GetState()</title>
<indexterm><primary>HAL_TIM_OnePulse_GetState</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_GetState</secondary></indexterm>
<para><computeroutput><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> HAL_TIM_OnePulse_GetState (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga476d67a220c23ebdc69fac7b09dbaa72"/><section>
    <title>HAL_TIM_OnePulse_Init()</title>
<indexterm><primary>HAL_TIM_OnePulse_Init</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_Init</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_Init (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t OnePulseMode)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga9b73c7135e8348613f30f3a4d84478e7"/><section>
    <title>HAL_TIM_OnePulse_MspDeInit()</title>
<indexterm><primary>HAL_TIM_OnePulse_MspDeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_MspDeInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_OnePulse_MspDeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6579726753cb2b769a21d10bec75219f"/><section>
    <title>HAL_TIM_OnePulse_MspInit()</title>
<indexterm><primary>HAL_TIM_OnePulse_MspInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_MspInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_OnePulse_MspInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga40e43e4f2484df59079e0316d6a6fd23"/><section>
    <title>HAL_TIM_OnePulse_Start()</title>
<indexterm><primary>HAL_TIM_OnePulse_Start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_Start</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_Start (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t OutputChannel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gafcde302725d20c6f992f26660d491bb9"/><section>
    <title>HAL_TIM_OnePulse_Start_IT()</title>
<indexterm><primary>HAL_TIM_OnePulse_Start_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_Start_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_Start_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t OutputChannel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac7744a2a063e8bf2909319d70fc764fd"/><section>
    <title>HAL_TIM_OnePulse_Stop()</title>
<indexterm><primary>HAL_TIM_OnePulse_Stop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_Stop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_Stop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t OutputChannel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6bbce5414404228fde71dadd8d1cddc7"/><section>
    <title>HAL_TIM_OnePulse_Stop_IT()</title>
<indexterm><primary>HAL_TIM_OnePulse_Stop_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_OnePulse_Stop_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_OnePulse_Stop_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t OutputChannel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga8a3b0ad512a6e6c6157440b68d395eac"/><section>
    <title>HAL_TIM_PeriodElapsedCallback()</title>
<indexterm><primary>HAL_TIM_PeriodElapsedCallback</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PeriodElapsedCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PeriodElapsedCallback (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac14a4959f65f51a54e8ff511242e2131"/><section>
    <title>HAL_TIM_PWM_ConfigChannel()</title>
<indexterm><primary>HAL_TIM_PWM_ConfigChannel</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_ConfigChannel</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_ConfigChannel (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link> * sConfig, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga5bb7b197ace5bab9ef120163ff1520bd"/><section>
    <title>HAL_TIM_PWM_DeInit()</title>
<indexterm><primary>HAL_TIM_PWM_DeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_DeInit</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_DeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga207c64afb37d15e35b5380d4805e6eaf"/><section>
    <title>HAL_TIM_PWM_GetState()</title>
<indexterm><primary>HAL_TIM_PWM_GetState</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_GetState</secondary></indexterm>
<para><computeroutput><link linkend="_group___t_i_m_1gae0994cf5970e56ca4903e9151f40010c">HAL_TIM_StateTypeDef</link> HAL_TIM_PWM_GetState (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga25824b2eed564cc37a8983b99a83bdc7"/><section>
    <title>HAL_TIM_PWM_Init()</title>
<indexterm><primary>HAL_TIM_PWM_Init</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Init</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Init (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga3abff1ab9a918c30db77c7890e6e2b07"/><section>
    <title>HAL_TIM_PWM_MspDeInit()</title>
<indexterm><primary>HAL_TIM_PWM_MspDeInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_MspDeInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PWM_MspDeInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaf94d3d2003a4eebed73744ccd5c85974"/><section>
    <title>HAL_TIM_PWM_MspInit()</title>
<indexterm><primary>HAL_TIM_PWM_MspInit</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_MspInit</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PWM_MspInit (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga07e5fc4d223b16bec2fd6bed547cf91d"/><section>
    <title>HAL_TIM_PWM_PulseFinishedCallback()</title>
<indexterm><primary>HAL_TIM_PWM_PulseFinishedCallback</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_PulseFinishedCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PWM_PulseFinishedCallback (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga11da9bda53a5d21c293bb01da91e592d"/><section>
    <title>HAL_TIM_PWM_Start()</title>
<indexterm><primary>HAL_TIM_PWM_Start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Start</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Start (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaa4b542b3c0ae347ea580c9e7c8e88b17"/><section>
    <title>HAL_TIM_PWM_Start_DMA()</title>
<indexterm><primary>HAL_TIM_PWM_Start_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Start_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Start_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel, uint32_t * pData, uint16_t Length)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaca1f5fbc35101d0fc7e8af31c9a0c26c"/><section>
    <title>HAL_TIM_PWM_Start_IT()</title>
<indexterm><primary>HAL_TIM_PWM_Start_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Start_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Start_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gae087011858379feeb770ecb4568829d3"/><section>
    <title>HAL_TIM_PWM_Stop()</title>
<indexterm><primary>HAL_TIM_PWM_Stop</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Stop</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Stop (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gad77367f9b8d8d17842a913f7d6ce274b"/><section>
    <title>HAL_TIM_PWM_Stop_DMA()</title>
<indexterm><primary>HAL_TIM_PWM_Stop_DMA</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Stop_DMA</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Stop_DMA (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga0559af125dc5fb2bb183a6a4b86808b5"/><section>
    <title>HAL_TIM_PWM_Stop_IT()</title>
<indexterm><primary>HAL_TIM_PWM_Stop_IT</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_PWM_Stop_IT</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_PWM_Stop_IT (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6528480e73e4e51d5ce8aaca00d64d13"/><section>
    <title>HAL_TIM_ReadCapturedValue()</title>
<indexterm><primary>HAL_TIM_ReadCapturedValue</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_ReadCapturedValue</secondary></indexterm>
<para><computeroutput>uint32_t HAL_TIM_ReadCapturedValue (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, uint32_t Channel)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga07f536c10b542bc9695f23b1e84b5fce"/><section>
    <title>HAL_TIM_SlaveConfigSynchronization()</title>
<indexterm><primary>HAL_TIM_SlaveConfigSynchronization</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_SlaveConfigSynchronization</secondary></indexterm>
<para><computeroutput><link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> HAL_TIM_SlaveConfigSynchronization (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim, <link linkend="_struct_t_i_m___slave_config_type_def">TIM_SlaveConfigTypeDef</link> * sSlaveConfig)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga189577c72b1963671b26820d8161d678"/><section>
    <title>HAL_TIM_TriggerCallback()</title>
<indexterm><primary>HAL_TIM_TriggerCallback</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>HAL_TIM_TriggerCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_TriggerCallback (<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link> * htim)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga057e4b4da135186e8fb88327c5fd0684"/><section>
    <title>TIM_Base_SetConfig()</title>
<indexterm><primary>TIM_Base_SetConfig</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>TIM_Base_SetConfig</secondary></indexterm>
<para><computeroutput>void TIM_Base_SetConfig (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> * TIMx, <link linkend="_struct_t_i_m___base___init_type_def">TIM_Base_InitTypeDef</link> * Structure)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga7fcc6d5ca311c37f5d0250687c899924"/><section>
    <title>TIM_CCxChannelCmd()</title>
<indexterm><primary>TIM_CCxChannelCmd</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>TIM_CCxChannelCmd</secondary></indexterm>
<para><computeroutput>void TIM_CCxChannelCmd (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> * TIMx, uint32_t Channel, uint32_t ChannelState)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga20370137a5c000fa4739d30669e67b8c"/><section>
    <title>TIM_OC2_SetConfig()</title>
<indexterm><primary>TIM_OC2_SetConfig</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>TIM_OC2_SetConfig</secondary></indexterm>
<para><computeroutput>void TIM_OC2_SetConfig (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> * TIMx, <link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link> * OC_Config)</computeroutput></para></section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga83c847710a92f0558c862dd0dc889ff3"/><section>
    <title>TIM_TI1_SetConfig()</title>
<indexterm><primary>TIM_TI1_SetConfig</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>TIM_TI1_SetConfig</secondary></indexterm>
<para><computeroutput>void TIM_TI1_SetConfig (<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link> * TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection, uint32_t TIM_ICFilter)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga7db02d10872cda42716be0141e63fe12"/><section>
    <title>ch_num</title>
<indexterm><primary>ch_num</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>ch_num</secondary></indexterm>
<para><computeroutput>uint8_t ch_num</computeroutput></para>
<para>Host channel number. This parameter must be a number between Min_Data = 1 and Max_Data = 15 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00176">176</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac63588c3fc1becf689a6675898c2e480"/><section>
    <title>data_pid</title>
<indexterm><primary>data_pid</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>data_pid</secondary></indexterm>
<para><computeroutput>uint8_t data_pid</computeroutput></para>
<para>Initial data PID. This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00198">198</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga6ba2ee43a539a0b62e610ded1ba2dd1b"/><section>
    <title>data_pid_start</title>
<indexterm><primary>data_pid_start</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>data_pid_start</secondary></indexterm>
<para><computeroutput>uint8_t data_pid_start</computeroutput></para>
<para>Initial data PID This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00149">149</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1997a5306d6d04a9ce867303d1a6d9e1"/><section>
    <title>dev_addr</title>
<indexterm><primary>dev_addr</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>dev_addr</secondary></indexterm>
<para><computeroutput>uint8_t dev_addr</computeroutput></para>
<para>USB device address. This parameter must be a number between Min_Data = 1 and Max_Data = 255 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00173">173</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga3e066526cc6acb4c3eb9ecd1ee7e881c"/><section>
    <title>dev_endpoints</title>
<indexterm><primary>dev_endpoints</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>dev_endpoints</secondary></indexterm>
<para><computeroutput>uint32_t dev_endpoints</computeroutput></para>
<para>Device Endpoints number. This parameter depends on the used USB core. 
<literallayout>&#160;&#xa;</literallayout>
 This parameter must be a number between Min_Data = 1 and Max_Data = 15 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00104">104</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaa4264b8ef473c4df74ee6a5160717451"/><section>
    <title>dma_addr<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>dma_addr</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>dma_addr</secondary></indexterm>
<para><computeroutput>uint32_t dma_addr</computeroutput></para>
<para>32 bits aligned transfer buffer address 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00163">163</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaa4264b8ef473c4df74ee6a5160717451"/><section>
    <title>dma_addr<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>dma_addr</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>dma_addr</secondary></indexterm>
<para><computeroutput>uint32_t dma_addr</computeroutput></para>
<para>32 bits aligned transfer buffer address. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00213">213</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga3f852155ae5abdfbdbe9865383780eb1"/><section>
    <title>dma_enable</title>
<indexterm><primary>dma_enable</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>dma_enable</secondary></indexterm>
<para><computeroutput>uint32_t dma_enable</computeroutput></para>
<para>Enable or disable of the USB embedded DMA. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00115">115</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac246b3387fee295f1f5927592bed589f"/><section>
    <title>do_ping</title>
<indexterm><primary>do_ping</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>do_ping</secondary></indexterm>
<para><computeroutput>uint8_t do_ping</computeroutput></para>
<para>Enable or disable the use of the PING protocol for HS mode. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00188">188</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga99c6050b5a0c8e920d675437f1077526"/><section>
    <title>ep0_mps</title>
<indexterm><primary>ep0_mps</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>ep0_mps</secondary></indexterm>
<para><computeroutput>uint32_t ep0_mps</computeroutput></para>
<para>Set the Endpoint 0 Max Packet size. This parameter can be any value of <link linkend="_group___u_s_b___e_p0___m_p_s__">USB_EP0_MPS_</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00117">117</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac55364ab232bbd4bd61cb440a372d3f4"/><section>
    <title>ep_is_in</title>
<indexterm><primary>ep_is_in</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>ep_is_in</secondary></indexterm>
<para><computeroutput>uint8_t ep_is_in</computeroutput></para>
<para>Endpoint direction This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00182">182</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga0eb60627df64d4e20dc3a36f3c1af073"/><section>
    <title>ep_num</title>
<indexterm><primary>ep_num</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>ep_num</secondary></indexterm>
<para><computeroutput>uint8_t ep_num</computeroutput></para>
<para>Endpoint number. This parameter must be a number between Min_Data = 1 and Max_Data = 15 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00179">179</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga791714ade336270a9c8fafef311b28f0"/><section>
    <title>ep_type</title>
<indexterm><primary>ep_type</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>ep_type</secondary></indexterm>
<para><computeroutput>uint8_t ep_type</computeroutput></para>
<para>Endpoint Type. This parameter can be any value of <link linkend="_group___u_s_b___e_p___type__">USB_EP_Type_</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00192">192</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga3f7db8cf999eddc44dd0f9c5cadedabf"/><section>
    <title>ErrCnt</title>
<indexterm><primary>ErrCnt</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>ErrCnt</secondary></indexterm>
<para><computeroutput>uint32_t ErrCnt</computeroutput></para>
<para>Host channel error count. </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00215">215</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga72cbbcd19b06fa662d57aea1e9480808"/><section>
    <title>even_odd_frame</title>
<indexterm><primary>even_odd_frame</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>even_odd_frame</secondary></indexterm>
<para><computeroutput>uint8_t even_odd_frame</computeroutput></para>
<para>IFrame parity This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00152">152</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1893da3bf227c69993aa67797e3825dd"/><section>
    <title>Host_channels</title>
<indexterm><primary>Host_channels</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>Host_channels</secondary></indexterm>
<para><computeroutput>uint32_t Host_channels</computeroutput></para>
<para>Host Channels number. This parameter Depends on the used USB core. 
<literallayout>&#160;&#xa;</literallayout>
 This parameter must be a number between Min_Data = 1 and Max_Data = 15 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00108">108</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1b6103f5908a43d31b25bc3ca21f60ae"/><section>
    <title>is_in</title>
<indexterm><primary>is_in</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>is_in</secondary></indexterm>
<para><computeroutput>uint8_t is_in</computeroutput></para>
<para>Endpoint direction This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00140">140</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga5d7f3c5ec11e8d2c50d03e64182f037c"/><section>
    <title>is_stall</title>
<indexterm><primary>is_stall</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>is_stall</secondary></indexterm>
<para><computeroutput>uint8_t is_stall</computeroutput></para>
<para>Endpoint stall condition This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00143">143</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gab0b1e1f806ac5f343c9f468c08958fcc"/><section>
    <title>low_power_enable</title>
<indexterm><primary>low_power_enable</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>low_power_enable</secondary></indexterm>
<para><computeroutput>uint32_t low_power_enable</computeroutput></para>
<para>Enable or disable the low power mode. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00125">125</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga290246297f8942d21b7519b1ef52844f"/><section>
    <title>max_packet</title>
<indexterm><primary>max_packet</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>max_packet</secondary></indexterm>
<para><computeroutput>uint16_t max_packet</computeroutput></para>
<para>Endpoint Max packet size. This parameter must be a number between Min_Data = 0 and Max_Data = 64KB 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00195">195</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga876f0bbf157a6bceb63630c99da8b077"/><section>
    <title>maxpacket</title>
<indexterm><primary>maxpacket</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>maxpacket</secondary></indexterm>
<para><computeroutput>uint32_t maxpacket</computeroutput></para>
<para>Endpoint Max packet size This parameter must be a number between Min_Data = 0 and Max_Data = 64KB </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00158">158</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gabea371f9030e15a5d2a4c181576833d8"/><section>
    <title>num</title>
<indexterm><primary>num</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>num</secondary></indexterm>
<para><computeroutput>uint8_t num</computeroutput></para>
<para>Endpoint number This parameter must be a number between Min_Data = 1 and Max_Data = 15 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00137">137</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac74d5572af6a1a9564cab48a9bdd7e4d"/><section>
    <title>phy_itface</title>
<indexterm><primary>phy_itface</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>phy_itface</secondary></indexterm>
<para><computeroutput>uint32_t phy_itface</computeroutput></para>
<para>Select the used PHY interface. This parameter can be any value of <link linkend="_group___u_s_b___core___p_h_y__">USB_Core_PHY_</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00120">120</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga7983b3f5be33e9e129c5a58f1f1df29f"/><section>
    <title>process_ping</title>
<indexterm><primary>process_ping</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>process_ping</secondary></indexterm>
<para><computeroutput>uint8_t process_ping</computeroutput></para>
<para>Execute the PING protocol for HS mode. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00190">190</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaec30c1f869d10e0b14b26f1e5e2024c8"/><section>
    <title>Sof_enable</title>
<indexterm><primary>Sof_enable</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>Sof_enable</secondary></indexterm>
<para><computeroutput>uint32_t Sof_enable</computeroutput></para>
<para>Enable or disable the output of the SOF signal. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00123">123</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga220859a8b5da0232739a11cbe7f79fc5"/><section>
    <title>speed<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>speed</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>speed</secondary></indexterm>
<para><computeroutput>uint32_t speed</computeroutput></para>
<para>USB Core speed. This parameter can be any value of <link linkend="_group___u_s_b___core___speed__">USB_Core_Speed_</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00112">112</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaae32029df16a54aa86c0aec2df9f7bb7"/><section>
    <title>speed<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>speed</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>speed</secondary></indexterm>
<para><computeroutput>uint8_t speed</computeroutput></para>
<para>USB Host speed. This parameter can be any value of <link linkend="_group___u_s_b___core___speed__">USB_Core_Speed_</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00185">185</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga2b8ce5ad330b7da2b268463d4151d060"/><section>
    <title>state</title>
<indexterm><primary>state</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>state</secondary></indexterm>
<para><computeroutput><link linkend="_group___u_s_b___core_1ga8fa88c2e8e5fe41147028ba11af65294">USB_OTG_HCStateTypeDef</link> state</computeroutput></para>
<para>Host Channel state. This parameter can be any value of <link linkend="_group___u_s_b___core_1ga8fa88c2e8e5fe41147028ba11af65294">USB_OTG_HCStateTypeDef</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00220">220</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gae12568439d6262c2fe3392f91b615b3e"/><section>
    <title>toggle_in</title>
<indexterm><primary>toggle_in</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>toggle_in</secondary></indexterm>
<para><computeroutput>uint8_t toggle_in</computeroutput></para>
<para>IN transfer current toggle flag. This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00207">207</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga44f913b85fb1e953cb4fe02015940d11"/><section>
    <title>toggle_out</title>
<indexterm><primary>toggle_out</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>toggle_out</secondary></indexterm>
<para><computeroutput>uint8_t toggle_out</computeroutput></para>
<para>OUT transfer current toggle flag This parameter must be a number between Min_Data = 0 and Max_Data = 1 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00210">210</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gaae1aeb1d778729ff805bba5b0aee9742"/><section>
    <title>tx_fifo_num</title>
<indexterm><primary>tx_fifo_num</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>tx_fifo_num</secondary></indexterm>
<para><computeroutput>uint16_t tx_fifo_num</computeroutput></para>
<para>Transmission FIFO number This parameter must be a number between Min_Data = 1 and Max_Data = 15 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00155">155</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga1d127017fb298b889f4ba24752d08b8e"/><section>
    <title>type</title>
<indexterm><primary>type</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>type</secondary></indexterm>
<para><computeroutput>uint8_t type</computeroutput></para>
<para>Endpoint type This parameter can be any value of <link linkend="_group___u_s_b___e_p___type__">USB_EP_Type_</link> 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00146">146</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gacc68206db8cee08ae00631698c62350c"/><section>
    <title>urb_state</title>
<indexterm><primary>urb_state</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>urb_state</secondary></indexterm>
<para><computeroutput><link linkend="_group___u_s_b___core_1ga04b2bca306495588fec3a5245daa5221">USB_OTG_URBStateTypeDef</link> urb_state</computeroutput></para>
<para>URB state. This parameter can be any value of <link linkend="_group___u_s_b___core_1ga04b2bca306495588fec3a5245daa5221">USB_OTG_URBStateTypeDef</link> </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00217">217</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gad3da23816bc3727e3bb800bb9fe6dc75"/><section>
    <title>use_dedicated_ep1</title>
<indexterm><primary>use_dedicated_ep1</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>use_dedicated_ep1</secondary></indexterm>
<para><computeroutput>uint32_t use_dedicated_ep1</computeroutput></para>
<para>Enable or disable the use of the dedicated EP1 interrupt. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00129">129</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga241efb6152a059bb5d821b08fb68cf1a"/><section>
    <title>use_external_vbus</title>
<indexterm><primary>use_external_vbus</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>use_external_vbus</secondary></indexterm>
<para><computeroutput>uint32_t use_external_vbus</computeroutput></para>
<para>Enable or disable the use of the external VBUS. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00131">131</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga15a4db2874f8f0655d5b0858ca2f3346"/><section>
    <title>vbus_sensing_enable</title>
<indexterm><primary>vbus_sensing_enable</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>vbus_sensing_enable</secondary></indexterm>
<para><computeroutput>uint32_t vbus_sensing_enable</computeroutput></para>
<para>Enable or disable the VBUS Sensing feature. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00127">127</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga81d9dc7c57d086dd4e35361f4b782ebd"/><section>
    <title>xfer_buff<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>xfer_buff</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>xfer_buff</secondary></indexterm>
<para><computeroutput>uint8_t* xfer_buff</computeroutput></para>
<para>Pointer to transfer buffer 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00161">161</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga81d9dc7c57d086dd4e35361f4b782ebd"/><section>
    <title>xfer_buff<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>xfer_buff</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>xfer_buff</secondary></indexterm>
<para><computeroutput>uint8_t* xfer_buff</computeroutput></para>
<para>Pointer to transfer buffer. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00201">201</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac67d8b3019f1fe22eb6fa889594c4adc"/><section>
    <title>xfer_count<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>xfer_count</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>xfer_count</secondary></indexterm>
<para><computeroutput>uint32_t xfer_count</computeroutput></para>
<para>Partial transfer length in case of multi packet transfer 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00167">167</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1gac67d8b3019f1fe22eb6fa889594c4adc"/><section>
    <title>xfer_count<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>xfer_count</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>xfer_count</secondary></indexterm>
<para><computeroutput>uint32_t xfer_count</computeroutput></para>
<para>Partial transfer length in case of multi packet transfer. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00205">205</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga4a9555456ad0e64b61e2609b9bfed9f7"/><section>
    <title>xfer_len<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>xfer_len</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>xfer_len</secondary></indexterm>
<para><computeroutput>uint32_t xfer_len</computeroutput></para>
<para>Current transfer length 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00165">165</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
<anchor xml:id="_group___s_t_m32_f4xx___h_a_l_1ga4a9555456ad0e64b61e2609b9bfed9f7"/><section>
    <title>xfer_len<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>xfer_len</primary><secondary>STM32F4xx_HAL</secondary></indexterm>
<indexterm><primary>STM32F4xx_HAL</primary><secondary>xfer_len</secondary></indexterm>
<para><computeroutput>uint32_t xfer_len</computeroutput></para>
<para>Current transfer length. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__ll__usb_8h_source_1l00203">203</link> of file <link linkend="_stm32f4xx__ll__usb_8h_source">stm32f4xx_ll_usb.h</link>.</para>
</section>
</section>
</section>
