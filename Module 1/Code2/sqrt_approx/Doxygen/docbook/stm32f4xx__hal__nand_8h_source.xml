<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f4xx__hal__nand_8h_source" xml:lang="en-US">
<title>stm32f4xx_hal_nand.h</title>
<indexterm><primary>C:/Users/dayton.flores/OneDrive/Documents/School/CU/ECEN 5803/Project 1/Module 1/Code2/sqrt_approx/mbed/TARGET_NUCLEO_F401RE/stm32f4xx_hal_nand.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00001"/>00001 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00038"/>00038 <emphasis role="comment">/*&#32;Define&#32;to&#32;prevent&#32;recursive&#32;inclusion&#32;-------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00039"/>00039 <emphasis role="preprocessor">#ifndef&#32;__STM32F4xx_HAL_NAND_H</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00040"/>00040 <emphasis role="preprocessor">#define&#32;__STM32F4xx_HAL_NAND_H</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00041"/>00041 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00042"/>00042 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00043"/>00043 &#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00044"/>00044 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00045"/>00045 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00046"/>00046 <emphasis role="comment">/*&#32;Includes&#32;------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00047"/>00047 <emphasis role="preprocessor">#if&#32;defined(STM32F405xx)&#32;||&#32;defined(STM32F415xx)&#32;||&#32;defined(STM32F407xx)||&#32;defined(STM32F417xx)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00048"/>00048 <emphasis role="preprocessor">&#32;&#32;#include&#32;&quot;<link linkend="_stm32f4xx__ll__fsmc_8h">stm32f4xx_ll_fsmc.h</link>&quot;</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00049"/>00049 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;STM32F405xx&#32;||&#32;STM32F415xx&#32;||&#32;STM32F407xx&#32;||&#32;STM32F417xx&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00050"/>00050 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00051"/>00051 <emphasis role="preprocessor">#if&#32;defined(STM32F427xx)&#32;||&#32;defined(STM32F437xx)&#32;||&#32;defined(STM32F429xx)||&#32;defined(STM32F439xx)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00052"/>00052 <emphasis role="preprocessor">&#32;&#32;#include&#32;&quot;<link linkend="_stm32f4xx__ll__fmc_8h">stm32f4xx_ll_fmc.h</link>&quot;</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00053"/>00053 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;STM32F427xx&#32;||&#32;STM32F437xx&#32;||&#32;STM32F429xx&#32;||&#32;STM32F439xx&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00054"/>00054 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00063"/>00063 <emphasis role="preprocessor">#if&#32;defined(STM32F405xx)&#32;||&#32;defined(STM32F415xx)&#32;||&#32;defined(STM32F407xx)&#32;||&#32;defined(STM32F417xx)&#32;||&#32;defined(STM32F427xx)&#32;||&#32;defined(STM32F437xx)&#32;||&#32;defined(STM32F429xx)&#32;||&#32;defined(STM32F439xx)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00064"/>00064 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00065"/>00065 <emphasis role="comment">/*&#32;Exported&#32;typedef&#32;----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00066"/>00066 <emphasis role="comment">/*&#32;Exported&#32;types&#32;------------------------------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00067"/>00067 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00071"/>00071 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00072"/>00072 {
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00073"/>00073 &#32;&#32;HAL_NAND_STATE_RESET&#32;&#32;&#32;&#32;&#32;=&#32;0x00,&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00074"/>00074 &#32;&#32;HAL_NAND_STATE_READY&#32;&#32;&#32;&#32;&#32;=&#32;0x01,&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00075"/>00075 &#32;&#32;HAL_NAND_STATE_BUSY&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x02,&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00076"/>00076 &#32;&#32;HAL_NAND_STATE_ERROR&#32;&#32;&#32;&#32;&#32;=&#32;0x03&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00077"/>00077 }HAL_NAND_StateTypeDef;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00078"/>00078 &#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00082"/>00082 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00083"/>00083 {
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00084"/>00084 &#32;&#32;<emphasis role="comment">/*&lt;!&#32;NAND&#32;memory&#32;electronic&#32;signature&#32;maker&#32;and&#32;device&#32;IDs&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00085"/>00085 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00086"/>00086 &#32;&#32;uint8_t&#32;Maker_Id;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00087"/>00087 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00088"/>00088 &#32;&#32;uint8_t&#32;Device_Id;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00089"/>00089 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00090"/>00090 &#32;&#32;uint8_t&#32;Third_Id;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00091"/>00091 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00092"/>00092 &#32;&#32;uint8_t&#32;Fourth_Id;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00093"/>00093 }NAND_IDTypeDef;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00094"/>00094 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00098"/>00098 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00099"/>00099 {
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00100"/>00100 &#32;&#32;uint16_t&#32;Page;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00102"/>00102 &#32;&#32;uint16_t&#32;Zone;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00104"/>00104 &#32;&#32;uint16_t&#32;Block;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00106"/>00106 }NAND_AddressTypedef;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00107"/>00107 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00111"/>00111 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00112"/>00112 {
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00113"/>00113 &#32;&#32;uint32_t&#32;PageSize;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00115"/>00115 &#32;&#32;uint32_t&#32;SpareAreaSize;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00117"/>00117 &#32;&#32;uint32_t&#32;BlockSize;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00119"/>00119 &#32;&#32;uint32_t&#32;BlockNbr;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00121"/>00121 &#32;&#32;uint32_t&#32;ZoneSize;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00122"/>00122 }NAND_InfoTypeDef;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00123"/>00123 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00127"/>00127 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00128"/>00128 {
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00129"/>00129 &#32;&#32;FMC_NAND_TypeDef&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*Instance;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00131"/>00131 &#32;&#32;FMC_NAND_InitTypeDef&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Init;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00133"/>00133 &#32;&#32;<link linkend="_stm32f4xx__hal__def_8h_1ab367482e943333a1299294eadaad284b">HAL_LockTypeDef</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Lock;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00135"/>00135 &#32;&#32;<link linkend="_core__cm0_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;HAL_NAND_StateTypeDef&#32;&#32;&#32;State;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00137"/>00137 &#32;&#32;NAND_InfoTypeDef&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Info;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00138"/>00138 }NAND_HandleTypeDef;
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00139"/>00139 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00140"/>00140 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00141"/>00141 <emphasis role="comment">/*&#32;Exported&#32;constants&#32;--------------------------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00145"/>00145 <emphasis role="preprocessor">#define&#32;NAND_DEVICE1&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x70000000)&#32;</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00146"/>00146 <emphasis role="preprocessor">#define&#32;NAND_DEVICE2&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x80000000)&#32;</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00147"/>00147 <emphasis role="preprocessor">#define&#32;NAND_WRITE_TIMEOUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x01000000)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00148"/>00148 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00149"/>00149 <emphasis role="preprocessor">#define&#32;CMD_AREA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)(1&lt;&lt;16))&#32;&#32;</emphasis><emphasis role="comment">/*&#32;A16&#32;=&#32;CLE&#32;high&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00150"/>00150 <emphasis role="preprocessor">#define&#32;ADDR_AREA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)(1&lt;&lt;17))&#32;&#32;</emphasis><emphasis role="comment">/*&#32;A17&#32;=&#32;ALE&#32;high&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00151"/>00151 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00152"/>00152 <emphasis role="preprocessor">#define&#32;NAND_CMD_AREA_A&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint8_t)0x00)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00153"/>00153 <emphasis role="preprocessor">#define&#32;NAND_CMD_AREA_B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint8_t)0x01)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00154"/>00154 <emphasis role="preprocessor">#define&#32;NAND_CMD_AREA_C&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint8_t)0x50)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00155"/>00155 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00156"/>00156 <emphasis role="comment">/*&#32;NAND&#32;memory&#32;status&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00157"/>00157 <emphasis role="preprocessor">#define&#32;NAND_VALID_ADDRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x00000100)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00158"/>00158 <emphasis role="preprocessor">#define&#32;NAND_INVALID_ADDRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x00000200)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00159"/>00159 <emphasis role="preprocessor">#define&#32;NAND_TIMEOUT_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x00000400)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00160"/>00160 <emphasis role="preprocessor">#define&#32;NAND_BUSY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x00000000)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00161"/>00161 <emphasis role="preprocessor">#define&#32;NAND_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x00000001)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00162"/>00162 <emphasis role="preprocessor">#define&#32;NAND_READY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0x00000040)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00163"/>00163 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00168"/>00168 <emphasis role="comment">/*&#32;Exported&#32;macro&#32;------------------------------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00169"/>00169 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00174"/>00174 <emphasis role="preprocessor">#define&#32;__HAL_NAND_RESET_HANDLE_STATE(__HANDLE__)&#32;((__HANDLE__)-&gt;State&#32;=&#32;HAL_NAND_STATE_RESET)</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00175"/>00175 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00182"/>00182 <emphasis role="preprocessor">#define&#32;ARRAY_ADDRESS(__ADDRESS__&#32;,&#32;__HANDLE__)&#32;((__ADDRESS__)-&gt;Page&#32;+&#32;(((__ADDRESS__)-&gt;Block&#32;+&#32;(((__ADDRESS__)-&gt;Zone)&#32;*&#32;((__HANDLE__)-&gt;Info.BlockSize)))*&#32;((__HANDLE__)-&gt;Info.ZoneSize)))</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00183"/>00183 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00189"/>00189 <emphasis role="preprocessor">#define&#32;ADDR_1st_CYCLE(__ADDRESS__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint8_t)((__ADDRESS__)&amp;&#32;0xFF)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;1st&#32;addressing&#32;cycle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00190"/>00190 <emphasis role="preprocessor">#define&#32;ADDR_2nd_CYCLE(__ADDRESS__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint8_t)(((__ADDRESS__)&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;8)&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;2nd&#32;addressing&#32;cycle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00191"/>00191 <emphasis role="preprocessor">#define&#32;ADDR_3rd_CYCLE(__ADDRESS__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint8_t)(((__ADDRESS__)&amp;&#32;0xFF0000)&#32;&gt;&gt;&#32;16)&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;3rd&#32;addressing&#32;cycle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00192"/>00192 <emphasis role="preprocessor">#define&#32;ADDR_4th_CYCLE(__ADDRESS__)&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint8_t)(((__ADDRESS__)&amp;&#32;0xFF000000)&#32;&gt;&gt;&#32;24)&#32;</emphasis><emphasis role="comment">/*&#32;4th&#32;addressing&#32;cycle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00193"/>00193 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00194"/>00194 <emphasis role="comment">/*&#32;Exported&#32;functions&#32;--------------------------------------------------------*/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00195"/>00195 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00196"/>00196 <emphasis role="comment">/*&#32;Initialization/de-initialization&#32;functions&#32;&#32;********************************/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00197"/>00197 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Init(NAND_HandleTypeDef&#32;*hnand,&#32;FMC_NAND_PCC_TimingTypeDef&#32;*ComSpace_Timing,&#32;FMC_NAND_PCC_TimingTypeDef&#32;*AttSpace_Timing);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00198"/>00198 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_DeInit(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00199"/>00199 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NAND_MspInit(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00200"/>00200 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NAND_MspDeInit(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00201"/>00201 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NAND_IRQHandler(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00202"/>00202 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NAND_ITCallback(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00203"/>00203 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00204"/>00204 <emphasis role="comment">/*&#32;IO&#32;operation&#32;functions&#32;&#32;****************************************************/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00205"/>00205 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Read_ID(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_IDTypeDef&#32;*pNAND_ID);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00206"/>00206 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Reset(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00207"/>00207 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Read_Page(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_AddressTypedef&#32;*pAddress,&#32;uint8_t&#32;*pBuffer,&#32;uint32_t&#32;NumPageToRead);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00208"/>00208 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Write_Page(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_AddressTypedef&#32;*pAddress,&#32;uint8_t&#32;*pBuffer,&#32;uint32_t&#32;NumPageToWrite);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00209"/>00209 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Read_SpareArea(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_AddressTypedef&#32;*pAddress,&#32;uint8_t&#32;*pBuffer,&#32;uint32_t&#32;NumSpareAreaToRead);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00210"/>00210 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Write_SpareArea(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_AddressTypedef&#32;*pAddress,&#32;uint8_t&#32;*pBuffer,&#32;uint32_t&#32;NumSpareAreaTowrite);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00211"/>00211 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_Erase_Block(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_AddressTypedef&#32;*pAddress);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00212"/>00212 uint32_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NAND_Read_Status(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00213"/>00213 uint32_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NAND_Address_Inc(NAND_HandleTypeDef&#32;*hnand,&#32;NAND_AddressTypedef&#32;*pAddress);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00214"/>00214 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00215"/>00215 <emphasis role="comment">/*&#32;NAND&#32;Control&#32;functions&#32;&#32;****************************************************/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00216"/>00216 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_ECC_Enable(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00217"/>00217 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_ECC_Disable(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00218"/>00218 <link linkend="_stm32f4xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link>&#32;&#32;HAL_NAND_GetECC(NAND_HandleTypeDef&#32;*hnand,&#32;uint32_t&#32;*ECCval,&#32;uint32_t&#32;Timeout);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00219"/>00219 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00220"/>00220 <emphasis role="comment">/*&#32;NAND&#32;State&#32;functions&#32;*******************************************************/</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00221"/>00221 HAL_NAND_StateTypeDef&#32;HAL_NAND_GetState(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00222"/>00222 uint32_t&#32;HAL_NAND_Read_Status(NAND_HandleTypeDef&#32;*hnand);
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00223"/>00223 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00224"/>00224 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;STM32F405xx&#32;||&#32;STM32F415xx&#32;||&#32;STM32F407xx&#32;||&#32;STM32F417xx&#32;||&#32;STM32F427xx&#32;||&#32;STM32F437xx&#32;||&#32;STM32F429xx&#32;||&#32;STM32F439xx&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00233"/>00233 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00234"/>00234 }
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00235"/>00235 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00236"/>00236 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00237"/>00237 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__STM32F4xx_HAL_NAND_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00238"/>00238 
<anchor xml:id="_stm32f4xx__hal__nand_8h_source_1l00239"/>00239 <emphasis role="comment">/************************&#32;(C)&#32;COPYRIGHT&#32;STMicroelectronics&#32;*****END&#32;OF&#32;FILE****/</emphasis>
</programlisting></section>
