<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pinmap_8h_source" xml:lang="en-US">
<title>pinmap.h</title>
<indexterm><primary>C:/Users/dayton.flores/OneDrive/Documents/School/CU/ECEN 5803/Project 1/Module 1/Code2/sqrt_approx/mbed/pinmap.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_pinmap_8h_source_1l00001"/>00001 <emphasis role="comment">/*&#32;mbed&#32;Microcontroller&#32;Library</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;2006-2013&#32;ARM&#32;Limited</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;Licensed&#32;under&#32;the&#32;Apache&#32;License,&#32;Version&#32;2.0&#32;(the&#32;&quot;License&quot;);</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except&#32;in&#32;compliance&#32;with&#32;the&#32;License.</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00007"/>00007 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;http://www.apache.org/licenses/LICENSE-2.0</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00009"/>00009 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00011"/>00011 <emphasis role="comment">&#32;*&#32;distributed&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;WITHOUT&#32;WARRANTIES&#32;OR&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;See&#32;the&#32;License&#32;for&#32;the&#32;specific&#32;language&#32;governing&#32;permissions&#32;and</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00014"/>00014 <emphasis role="comment">&#32;*&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00015"/>00015 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#ifndef&#32;MBED_PINMAP_H</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00017"/>00017 <emphasis role="preprocessor">#define&#32;MBED_PINMAP_H</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00018"/>00018 
<anchor xml:id="_pinmap_8h_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__pin_names_8h">PinNames.h</link>&quot;</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00020"/>00020 
<anchor xml:id="_pinmap_8h_source_1l00021"/>00021 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00022"/>00022 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_pinmap_8h_source_1l00023"/>00023 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00024"/>00024 
<anchor xml:id="_pinmap_8h_source_1l00025"/><link linkend="_struct_pin_map">00025</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
<anchor xml:id="_pinmap_8h_source_1l00026"/><link linkend="_struct_pin_map_1a1f46a3d0fd63bcb5591dc1db407300aa">00026</link> &#32;&#32;&#32;&#32;<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;<link linkend="_struct_pin_map_1a1f46a3d0fd63bcb5591dc1db407300aa">pin</link>;
<anchor xml:id="_pinmap_8h_source_1l00027"/><link linkend="_struct_pin_map_1aba57d6731cd37a86e5037daf3bf78113">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_pin_map_1aba57d6731cd37a86e5037daf3bf78113">peripheral</link>;
<anchor xml:id="_pinmap_8h_source_1l00028"/><link linkend="_struct_pin_map_1a7cc3dde63638a3a04a72881fafe603e5">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_pin_map_1a7cc3dde63638a3a04a72881fafe603e5">function</link>;
<anchor xml:id="_pinmap_8h_source_1l00029"/>00029 }&#32;<link linkend="_struct_pin_map">PinMap</link>;
<anchor xml:id="_pinmap_8h_source_1l00030"/>00030 
<anchor xml:id="_pinmap_8h_source_1l00031"/><link linkend="_pinmap_8h_1a8cdc00e264ff6f64af766066fde9a24e">00031</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_pinmap_8h_1a8cdc00e264ff6f64af766066fde9a24e">pin_function</link>(<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;pin,&#32;<emphasis role="keywordtype">int</emphasis>&#32;function);
<anchor xml:id="_pinmap_8h_source_1l00032"/><link linkend="_pinmap_8h_1a81bb3aa963b924fa3afb7892f4475057">00032</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_pinmap_8h_1a81bb3aa963b924fa3afb7892f4475057">pin_mode</link>&#32;&#32;&#32;&#32;(<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;pin,&#32;<link linkend="__pin_names_8h_1a15c0c34a3baec6b9d2390a426bd3ba96">PinMode</link>&#32;mode);
<anchor xml:id="_pinmap_8h_source_1l00033"/>00033 
<anchor xml:id="_pinmap_8h_source_1l00034"/><link linkend="_pinmap_8h_1a61c659a204f78a585f6042ff085ab25d">00034</link> uint32_t&#32;<link linkend="_pinmap_8h_1a61c659a204f78a585f6042ff085ab25d">pinmap_peripheral</link>(<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;pin,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_pin_map">PinMap</link>*&#32;map);
<anchor xml:id="_pinmap_8h_source_1l00035"/><link linkend="_pinmap_8h_1a760aa1a96c8d61db778028b2f97c3d92">00035</link> uint32_t&#32;<link linkend="_pinmap_8h_1a760aa1a96c8d61db778028b2f97c3d92">pinmap_merge</link>&#32;&#32;&#32;&#32;&#32;(uint32_t&#32;a,&#32;uint32_t&#32;b);
<anchor xml:id="_pinmap_8h_source_1l00036"/><link linkend="_pinmap_8h_1a6dad6e87e1855c89644f2954b09c0eef">00036</link> <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_pinmap_8h_1a6dad6e87e1855c89644f2954b09c0eef">pinmap_pinout</link>&#32;&#32;&#32;&#32;(<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;pin,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_pin_map">PinMap</link>&#32;*map);
<anchor xml:id="_pinmap_8h_source_1l00037"/><link linkend="_pinmap_8h_1a2caf0f4b74c5a1be05865169a673674b">00037</link> uint32_t&#32;<link linkend="_pinmap_8h_1a2caf0f4b74c5a1be05865169a673674b">pinmap_find_peripheral</link>(<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;pin,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_pin_map">PinMap</link>*&#32;map);
<anchor xml:id="_pinmap_8h_source_1l00038"/>00038 
<anchor xml:id="_pinmap_8h_source_1l00039"/>00039 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00040"/>00040 }
<anchor xml:id="_pinmap_8h_source_1l00041"/>00041 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_pinmap_8h_source_1l00042"/>00042 
<anchor xml:id="_pinmap_8h_source_1l00043"/>00043 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
