<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___s_d___exported___constants" xml:lang="en-US">
<title>SD_Exported_Constants</title>
<indexterm><primary>SD_Exported_Constants</primary></indexterm>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga9d34df51b7f169e0be94fea97d0c1639">SD_CMD_GO_IDLE_STATE</link>   ((uint8_t)0)</para>

<para>SD Commands Index. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga74eabc4acadc80ad0242d52942c8d76a">SD_CMD_SEND_OP_COND</link>   ((uint8_t)1)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga3d9d3a1da54a30d81e1d2a9c6a2d9b4f">SD_CMD_ALL_SEND_CID</link>   ((uint8_t)2)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaa7e0f4e84001656eac62b41179376a25">SD_CMD_SET_REL_ADDR</link>   ((uint8_t)3)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga89e890726a09716bb1a5c6ef6d0d3d90">SD_CMD_SET_DSR</link>   ((uint8_t)4)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga5f4e5909200ef9eb61ac2252f4099360">SD_CMD_SDIO_SEN_OP_COND</link>   ((uint8_t)5)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga88fb9fd3b2c9fea10b79da9a569d4471">SD_CMD_HS_SWITCH</link>   ((uint8_t)6)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaf049767ff08cf35fcddef8f413964050">SD_CMD_SEL_DESEL_CARD</link>   ((uint8_t)7)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaeea3a373a0065cab0080a56395bc5a19">SD_CMD_HS_SEND_EXT_CSD</link>   ((uint8_t)8)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaffe6f096eefb62711d4ba298c4598e2e">SD_CMD_SEND_CSD</link>   ((uint8_t)9)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gad0df99cd4f523813b603109db94f07c6">SD_CMD_SEND_CID</link>   ((uint8_t)10)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gacf2a1a56e95b0b5ebeca09a38c9538e7">SD_CMD_READ_DAT_UNTIL_STOP</link>   ((uint8_t)11)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga45a924a12fc702bebac386ed429a60ff">SD_CMD_STOP_TRANSMISSION</link>   ((uint8_t)12)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga4d58ed74fb20e34fb557fa97c1935fe3">SD_CMD_SEND_STATUS</link>   ((uint8_t)13)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga4dbc2cc034c8f582602063be358ad160">SD_CMD_HS_BUSTEST_READ</link>   ((uint8_t)14)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gab8adaf3188d195b83ba32a9e72863072">SD_CMD_GO_INACTIVE_STATE</link>   ((uint8_t)15)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga77edc6b67b0921f4473adc7b95039de3">SD_CMD_SET_BLOCKLEN</link>   ((uint8_t)16)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga8a0361bd4864fe9368ba54bc9b2bda24">SD_CMD_READ_SINGLE_BLOCK</link>   ((uint8_t)17)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gafedc6b182681752a4299dffdd1ce74da">SD_CMD_READ_MULT_BLOCK</link>   ((uint8_t)18)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga2bc9f60a2cc409365a49862d8551349e">SD_CMD_HS_BUSTEST_WRITE</link>   ((uint8_t)19)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga6478634540db1fa3fcd044315d1238b5">SD_CMD_WRITE_DAT_UNTIL_STOP</link>   ((uint8_t)20)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga5dd52de3e95163402a5cd995620d4d01">SD_CMD_SET_BLOCK_COUNT</link>   ((uint8_t)23)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga20a1c8427ec19835fe2782ec8febd5ca">SD_CMD_WRITE_SINGLE_BLOCK</link>   ((uint8_t)24)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gafe82a884b2692654c9862bb25b8706ce">SD_CMD_WRITE_MULT_BLOCK</link>   ((uint8_t)25)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gae4c3d35575ecc87fb571f2bfb80f3847">SD_CMD_PROG_CID</link>   ((uint8_t)26)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaf911e3c602583e43e3bc16def5feebfc">SD_CMD_PROG_CSD</link>   ((uint8_t)27)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga7a35e2c3f9d6237bf7a3577225d077d8">SD_CMD_SET_WRITE_PROT</link>   ((uint8_t)28)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gac1c159cda7e89dfc085ac66e90790a56">SD_CMD_CLR_WRITE_PROT</link>   ((uint8_t)29)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gabeb680262be8cc173543ae8b1874c83d">SD_CMD_SEND_WRITE_PROT</link>   ((uint8_t)30)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga34496e2b57973936b853bb1d20dc277d">SD_CMD_SD_ERASE_GRP_START</link>   ((uint8_t)32)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gae3118ae546ea7ba60735b866552047ac">SD_CMD_SD_ERASE_GRP_END</link>   ((uint8_t)33)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gae91f1c058f4b0aace233e0e4866fa1d3">SD_CMD_ERASE_GRP_START</link>   ((uint8_t)35)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gabd1685e886f2b4cdeed5813d430a9bf3">SD_CMD_ERASE_GRP_END</link>   ((uint8_t)36)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga16f4d3918ba7fb538f8d1f3fb8bb0bd1">SD_CMD_ERASE</link>   ((uint8_t)38)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gac8319cdb71748237d00c937f0fa47fda">SD_CMD_FAST_IO</link>   ((uint8_t)39)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gac71656d887c8fad884e95ec525a0a8af">SD_CMD_GO_IRQ_STATE</link>   ((uint8_t)40)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gac89f6043b27673973f4a2b7e106a5f63">SD_CMD_LOCK_UNLOCK</link>   ((uint8_t)42)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga389f949c4ceace711f57dd00f71a8760">SD_CMD_APP_CMD</link>   ((uint8_t)55)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga201db10c31dd8f6e30d99ca58dd291e6">SD_CMD_GEN_CMD</link>   ((uint8_t)56)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gab88d7dbeaf38955b1c7d2806f6b446c2">SD_CMD_NO_CMD</link>   ((uint8_t)64)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga1b28ab176d0d05d7f971809aeb07b758">SD_CMD_APP_SD_SET_BUSWIDTH</link>   ((uint8_t)6)</para>

<para>Following commands are SD Card Specific commands. SDIO_APP_CMD should be sent before sending these commands. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga2984265566ee729869324cf5b842a601">SD_CMD_SD_APP_STAUS</link>   ((uint8_t)13)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gae38cb2fd8f0e7cb42c76e3b11055c424">SD_CMD_SD_APP_SEND_NUM_WRITE_BLOCKS</link>   ((uint8_t)22)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga980954ae3a961028fd59f67a1a30a7de">SD_CMD_SD_APP_OP_COND</link>   ((uint8_t)41)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga713f0d9a7c99b7becea80f232c024b59">SD_CMD_SD_APP_SET_CLR_CARD_DETECT</link>   ((uint8_t)42)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga11c23db52041ccaca4a2dbcafca62c88">SD_CMD_SD_APP_SEND_SCR</link>   ((uint8_t)51)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga09d3d2d61d003d6bf75c3fb128e86dbb">SD_CMD_SDIO_RW_DIRECT</link>   ((uint8_t)52)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaf40f42039cf756a3805800b48e2790ed">SD_CMD_SDIO_RW_EXTENDED</link>   ((uint8_t)53)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga4f8828be53bb69d6436c03c9c2f427c6">SD_CMD_SD_APP_GET_MKB</link>   ((uint8_t)43)</para>

<para>Following commands are SD Card Specific security commands. SD_CMD_APP_CMD should be sent before sending these commands. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaf2e3bf3ef0ee9a3cbb20d43700521ea7">SD_CMD_SD_APP_GET_MID</link>   ((uint8_t)44)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga120a1adc8c10961c831b197f0fd51f76">SD_CMD_SD_APP_SET_CER_RN1</link>   ((uint8_t)45)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gab8fbec70c55b91b2227dd592b7257eae">SD_CMD_SD_APP_GET_CER_RN2</link>   ((uint8_t)46)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga6775fd69fe0e739c7464951bd6aacdf1">SD_CMD_SD_APP_SET_CER_RES2</link>   ((uint8_t)47)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga0f39072d4c981331dfc1956c09d8a72c">SD_CMD_SD_APP_GET_CER_RES1</link>   ((uint8_t)48)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga7f4041b0d212f2d5d3f725b0beb97f0e">SD_CMD_SD_APP_SECURE_READ_MULTIPLE_BLOCK</link>   ((uint8_t)18)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga97cfaea6d5d8646eda4e40b5e0bcbf94">SD_CMD_SD_APP_SECURE_WRITE_MULTIPLE_BLOCK</link>   ((uint8_t)25)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga60d30f8255fe89e8d1c4aaabb4f3a60f">SD_CMD_SD_APP_SECURE_ERASE</link>   ((uint8_t)38)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga15e57ba63b8da2bf43d0205efd532b89">SD_CMD_SD_APP_CHANGE_SECURE_AREA</link>   ((uint8_t)49)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga025052e51318ae13855774c1acf04ee2">SD_CMD_SD_APP_SECURE_WRITE_MKB</link>   ((uint8_t)48)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga17ac25bb857f597f7d116204dba680fe">STD_CAPACITY_SD_CARD_V1_1</link>   ((uint32_t)0x00000000)</para>

<para>Supported SD Memory Cards. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gaf601977dbd0ccffc168a727e3683ac9a">STD_CAPACITY_SD_CARD_V2_0</link>   ((uint32_t)0x00000001)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga6cf1a896d3ea30557f42ca012ecc751a">HIGH_CAPACITY_SD_CARD</link>   ((uint32_t)0x00000002)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gac0d14af60bcf9077942270e3d135c897">MULTIMEDIA_CARD</link>   ((uint32_t)0x00000003)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga56d085c2c9101ddbdca82e783a5c0380">SECURE_DIGITAL_IO_CARD</link>   ((uint32_t)0x00000004)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1ga7213c9d2659184149734fa83fe78979f">HIGH_SPEED_MULTIMEDIA_CARD</link>   ((uint32_t)0x00000005)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gadee0691ba1aec81ee1893ae06e92f24d">SECURE_DIGITAL_IO_COMBO_CARD</link>   ((uint32_t)0x00000006)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___s_d___exported___constants_1gafd9c159c07436c4f30e30489b6080a04">HIGH_CAPACITY_MMC_CARD</link>   ((uint32_t)0x00000007)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___s_d___exported___constants_1gafd9c159c07436c4f30e30489b6080a04"/><section>
    <title>HIGH_CAPACITY_MMC_CARD</title>
<indexterm><primary>HIGH_CAPACITY_MMC_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>HIGH_CAPACITY_MMC_CARD</secondary></indexterm>
<para><computeroutput>#define HIGH_CAPACITY_MMC_CARD   ((uint32_t)0x00000007)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00390">390</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga6cf1a896d3ea30557f42ca012ecc751a"/><section>
    <title>HIGH_CAPACITY_SD_CARD</title>
<indexterm><primary>HIGH_CAPACITY_SD_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>HIGH_CAPACITY_SD_CARD</secondary></indexterm>
<para><computeroutput>#define HIGH_CAPACITY_SD_CARD   ((uint32_t)0x00000002)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00385">385</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga7213c9d2659184149734fa83fe78979f"/><section>
    <title>HIGH_SPEED_MULTIMEDIA_CARD</title>
<indexterm><primary>HIGH_SPEED_MULTIMEDIA_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>HIGH_SPEED_MULTIMEDIA_CARD</secondary></indexterm>
<para><computeroutput>#define HIGH_SPEED_MULTIMEDIA_CARD   ((uint32_t)0x00000005)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00388">388</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gac0d14af60bcf9077942270e3d135c897"/><section>
    <title>MULTIMEDIA_CARD</title>
<indexterm><primary>MULTIMEDIA_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>MULTIMEDIA_CARD</secondary></indexterm>
<para><computeroutput>#define MULTIMEDIA_CARD   ((uint32_t)0x00000003)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00386">386</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga3d9d3a1da54a30d81e1d2a9c6a2d9b4f"/><section>
    <title>SD_CMD_ALL_SEND_CID</title>
<indexterm><primary>SD_CMD_ALL_SEND_CID</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_ALL_SEND_CID</secondary></indexterm>
<para><computeroutput>#define SD_CMD_ALL_SEND_CID   ((uint8_t)2)</computeroutput></para>
<para>Asks any card connected to the host to send the CID numbers on the CMD line. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00297">297</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga389f949c4ceace711f57dd00f71a8760"/><section>
    <title>SD_CMD_APP_CMD</title>
<indexterm><primary>SD_CMD_APP_CMD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_APP_CMD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_APP_CMD   ((uint8_t)55)</computeroutput></para>
<para>Indicates to the card that the next command is an application specific command rather than a standard command. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00343">343</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga1b28ab176d0d05d7f971809aeb07b758"/><section>
    <title>SD_CMD_APP_SD_SET_BUSWIDTH</title>
<indexterm><primary>SD_CMD_APP_SD_SET_BUSWIDTH</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_APP_SD_SET_BUSWIDTH</secondary></indexterm>
<para><computeroutput>#define SD_CMD_APP_SD_SET_BUSWIDTH   ((uint8_t)6)</computeroutput></para><para>

<para>Following commands are SD Card Specific commands. SDIO_APP_CMD should be sent before sending these commands. </para>
</para>

<para>(ACMD6) Defines the data bus width to be used for data transfer. The allowed data bus widths are given in SCR register. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00353">353</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gac1c159cda7e89dfc085ac66e90790a56"/><section>
    <title>SD_CMD_CLR_WRITE_PROT</title>
<indexterm><primary>SD_CMD_CLR_WRITE_PROT</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_CLR_WRITE_PROT</secondary></indexterm>
<para><computeroutput>#define SD_CMD_CLR_WRITE_PROT   ((uint8_t)29)</computeroutput></para>
<para>Clears the write protection bit of the addressed group. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00329">329</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga16f4d3918ba7fb538f8d1f3fb8bb0bd1"/><section>
    <title>SD_CMD_ERASE</title>
<indexterm><primary>SD_CMD_ERASE</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_ERASE</secondary></indexterm>
<para><computeroutput>#define SD_CMD_ERASE   ((uint8_t)38)</computeroutput></para>
<para>Reserved for SD security applications. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00337">337</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gabd1685e886f2b4cdeed5813d430a9bf3"/><section>
    <title>SD_CMD_ERASE_GRP_END</title>
<indexterm><primary>SD_CMD_ERASE_GRP_END</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_ERASE_GRP_END</secondary></indexterm>
<para><computeroutput>#define SD_CMD_ERASE_GRP_END   ((uint8_t)36)</computeroutput></para>
<para>Sets the address of the last write block of the continuous range to be erased. Reserved for each command system set by switch function command (CMD6). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00336">336</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gae91f1c058f4b0aace233e0e4866fa1d3"/><section>
    <title>SD_CMD_ERASE_GRP_START</title>
<indexterm><primary>SD_CMD_ERASE_GRP_START</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_ERASE_GRP_START</secondary></indexterm>
<para><computeroutput>#define SD_CMD_ERASE_GRP_START   ((uint8_t)35)</computeroutput></para>
<para>Sets the address of the first write block to be erased. Reserved for each command system set by switch function command (CMD6). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00334">334</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gac8319cdb71748237d00c937f0fa47fda"/><section>
    <title>SD_CMD_FAST_IO</title>
<indexterm><primary>SD_CMD_FAST_IO</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_FAST_IO</secondary></indexterm>
<para><computeroutput>#define SD_CMD_FAST_IO   ((uint8_t)39)</computeroutput></para>
<para>SD card doesn&apos;t support it (Reserved). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00338">338</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga201db10c31dd8f6e30d99ca58dd291e6"/><section>
    <title>SD_CMD_GEN_CMD</title>
<indexterm><primary>SD_CMD_GEN_CMD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_GEN_CMD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_GEN_CMD   ((uint8_t)56)</computeroutput></para>
<para>Used either to transfer a data block to the card or to get a data block from the card for general purpose/application specific commands. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00345">345</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga9d34df51b7f169e0be94fea97d0c1639"/><section>
    <title>SD_CMD_GO_IDLE_STATE</title>
<indexterm><primary>SD_CMD_GO_IDLE_STATE</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_GO_IDLE_STATE</secondary></indexterm>
<para><computeroutput>#define SD_CMD_GO_IDLE_STATE   ((uint8_t)0)</computeroutput></para><para>

<para>SD Commands Index. </para>
</para>

<para>Resets the SD memory card. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00295">295</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gab8adaf3188d195b83ba32a9e72863072"/><section>
    <title>SD_CMD_GO_INACTIVE_STATE</title>
<indexterm><primary>SD_CMD_GO_INACTIVE_STATE</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_GO_INACTIVE_STATE</secondary></indexterm>
<para><computeroutput>#define SD_CMD_GO_INACTIVE_STATE   ((uint8_t)15)</computeroutput></para>
<para>Sends an addressed card into the inactive state. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00312">312</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gac71656d887c8fad884e95ec525a0a8af"/><section>
    <title>SD_CMD_GO_IRQ_STATE</title>
<indexterm><primary>SD_CMD_GO_IRQ_STATE</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_GO_IRQ_STATE</secondary></indexterm>
<para><computeroutput>#define SD_CMD_GO_IRQ_STATE   ((uint8_t)40)</computeroutput></para>
<para>SD card doesn&apos;t support it (Reserved). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00339">339</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga4dbc2cc034c8f582602063be358ad160"/><section>
    <title>SD_CMD_HS_BUSTEST_READ</title>
<indexterm><primary>SD_CMD_HS_BUSTEST_READ</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_HS_BUSTEST_READ</secondary></indexterm>
<para><computeroutput>#define SD_CMD_HS_BUSTEST_READ   ((uint8_t)14)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00311">311</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga2bc9f60a2cc409365a49862d8551349e"/><section>
    <title>SD_CMD_HS_BUSTEST_WRITE</title>
<indexterm><primary>SD_CMD_HS_BUSTEST_WRITE</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_HS_BUSTEST_WRITE</secondary></indexterm>
<para><computeroutput>#define SD_CMD_HS_BUSTEST_WRITE   ((uint8_t)19)</computeroutput></para>
<para>64 bytes tuning pattern is sent for SDR50 and SDR104. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00320">320</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaeea3a373a0065cab0080a56395bc5a19"/><section>
    <title>SD_CMD_HS_SEND_EXT_CSD</title>
<indexterm><primary>SD_CMD_HS_SEND_EXT_CSD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_HS_SEND_EXT_CSD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_HS_SEND_EXT_CSD   ((uint8_t)8)</computeroutput></para>
<para>Sends SD Memory Card interface condition, which includes host supply voltage information and asks the card whether card supports voltage. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00305">305</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga88fb9fd3b2c9fea10b79da9a569d4471"/><section>
    <title>SD_CMD_HS_SWITCH</title>
<indexterm><primary>SD_CMD_HS_SWITCH</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_HS_SWITCH</secondary></indexterm>
<para><computeroutput>#define SD_CMD_HS_SWITCH   ((uint8_t)6)</computeroutput></para>
<para>Checks switchable function (mode 0) and switch card function (mode 1). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00302">302</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gac89f6043b27673973f4a2b7e106a5f63"/><section>
    <title>SD_CMD_LOCK_UNLOCK</title>
<indexterm><primary>SD_CMD_LOCK_UNLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_LOCK_UNLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_LOCK_UNLOCK   ((uint8_t)42)</computeroutput></para>
<para>Sets/resets the password or lock/unlock the card. The size of the data block is set by the SET_BLOCK_LEN command. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00341">341</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gab88d7dbeaf38955b1c7d2806f6b446c2"/><section>
    <title>SD_CMD_NO_CMD</title>
<indexterm><primary>SD_CMD_NO_CMD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_NO_CMD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_NO_CMD   ((uint8_t)64)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00346">346</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gae4c3d35575ecc87fb571f2bfb80f3847"/><section>
    <title>SD_CMD_PROG_CID</title>
<indexterm><primary>SD_CMD_PROG_CID</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_PROG_CID</secondary></indexterm>
<para><computeroutput>#define SD_CMD_PROG_CID   ((uint8_t)26)</computeroutput></para>
<para>Reserved for manufacturers. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00326">326</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaf911e3c602583e43e3bc16def5feebfc"/><section>
    <title>SD_CMD_PROG_CSD</title>
<indexterm><primary>SD_CMD_PROG_CSD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_PROG_CSD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_PROG_CSD   ((uint8_t)27)</computeroutput></para>
<para>Programming of the programmable bits of the CSD. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00327">327</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gacf2a1a56e95b0b5ebeca09a38c9538e7"/><section>
    <title>SD_CMD_READ_DAT_UNTIL_STOP</title>
<indexterm><primary>SD_CMD_READ_DAT_UNTIL_STOP</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_READ_DAT_UNTIL_STOP</secondary></indexterm>
<para><computeroutput>#define SD_CMD_READ_DAT_UNTIL_STOP   ((uint8_t)11)</computeroutput></para>
<para>SD card doesn&apos;t support it. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00308">308</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gafedc6b182681752a4299dffdd1ce74da"/><section>
    <title>SD_CMD_READ_MULT_BLOCK</title>
<indexterm><primary>SD_CMD_READ_MULT_BLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_READ_MULT_BLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_READ_MULT_BLOCK   ((uint8_t)18)</computeroutput></para>
<para>Continuously transfers data blocks from card to host until interrupted by STOP_TRANSMISSION command. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00319">319</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga8a0361bd4864fe9368ba54bc9b2bda24"/><section>
    <title>SD_CMD_READ_SINGLE_BLOCK</title>
<indexterm><primary>SD_CMD_READ_SINGLE_BLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_READ_SINGLE_BLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_READ_SINGLE_BLOCK   ((uint8_t)17)</computeroutput></para>
<para>Reads single block of size selected by SET_BLOCKLEN in case of SDSC, and a block of fixed 512 bytes in case of SDHC and SDXC. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00317">317</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga15e57ba63b8da2bf43d0205efd532b89"/><section>
    <title>SD_CMD_SD_APP_CHANGE_SECURE_AREA</title>
<indexterm><primary>SD_CMD_SD_APP_CHANGE_SECURE_AREA</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_CHANGE_SECURE_AREA</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_CHANGE_SECURE_AREA   ((uint8_t)49)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00377">377</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga0f39072d4c981331dfc1956c09d8a72c"/><section>
    <title>SD_CMD_SD_APP_GET_CER_RES1</title>
<indexterm><primary>SD_CMD_SD_APP_GET_CER_RES1</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_GET_CER_RES1</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_GET_CER_RES1   ((uint8_t)48)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00373">373</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gab8fbec70c55b91b2227dd592b7257eae"/><section>
    <title>SD_CMD_SD_APP_GET_CER_RN2</title>
<indexterm><primary>SD_CMD_SD_APP_GET_CER_RN2</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_GET_CER_RN2</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_GET_CER_RN2   ((uint8_t)46)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00371">371</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaf2e3bf3ef0ee9a3cbb20d43700521ea7"/><section>
    <title>SD_CMD_SD_APP_GET_MID</title>
<indexterm><primary>SD_CMD_SD_APP_GET_MID</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_GET_MID</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_GET_MID   ((uint8_t)44)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00369">369</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga4f8828be53bb69d6436c03c9c2f427c6"/><section>
    <title>SD_CMD_SD_APP_GET_MKB</title>
<indexterm><primary>SD_CMD_SD_APP_GET_MKB</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_GET_MKB</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_GET_MKB   ((uint8_t)43)</computeroutput></para><para>

<para>Following commands are SD Card Specific security commands. SD_CMD_APP_CMD should be sent before sending these commands. </para>
</para>

<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00368">368</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga980954ae3a961028fd59f67a1a30a7de"/><section>
    <title>SD_CMD_SD_APP_OP_COND</title>
<indexterm><primary>SD_CMD_SD_APP_OP_COND</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_OP_COND</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_OP_COND   ((uint8_t)41)</computeroutput></para>
<para>(ACMD41) Sends host capacity support information (HCS) and asks the accessed card to send its operating condition register (OCR) content in the response on the CMD line. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00358">358</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga60d30f8255fe89e8d1c4aaabb4f3a60f"/><section>
    <title>SD_CMD_SD_APP_SECURE_ERASE</title>
<indexterm><primary>SD_CMD_SD_APP_SECURE_ERASE</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SECURE_ERASE</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SECURE_ERASE   ((uint8_t)38)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00376">376</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga7f4041b0d212f2d5d3f725b0beb97f0e"/><section>
    <title>SD_CMD_SD_APP_SECURE_READ_MULTIPLE_BLOCK</title>
<indexterm><primary>SD_CMD_SD_APP_SECURE_READ_MULTIPLE_BLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SECURE_READ_MULTIPLE_BLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SECURE_READ_MULTIPLE_BLOCK   ((uint8_t)18)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00374">374</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga025052e51318ae13855774c1acf04ee2"/><section>
    <title>SD_CMD_SD_APP_SECURE_WRITE_MKB</title>
<indexterm><primary>SD_CMD_SD_APP_SECURE_WRITE_MKB</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SECURE_WRITE_MKB</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SECURE_WRITE_MKB   ((uint8_t)48)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00378">378</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga97cfaea6d5d8646eda4e40b5e0bcbf94"/><section>
    <title>SD_CMD_SD_APP_SECURE_WRITE_MULTIPLE_BLOCK</title>
<indexterm><primary>SD_CMD_SD_APP_SECURE_WRITE_MULTIPLE_BLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SECURE_WRITE_MULTIPLE_BLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SECURE_WRITE_MULTIPLE_BLOCK   ((uint8_t)25)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00375">375</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gae38cb2fd8f0e7cb42c76e3b11055c424"/><section>
    <title>SD_CMD_SD_APP_SEND_NUM_WRITE_BLOCKS</title>
<indexterm><primary>SD_CMD_SD_APP_SEND_NUM_WRITE_BLOCKS</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SEND_NUM_WRITE_BLOCKS</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SEND_NUM_WRITE_BLOCKS   ((uint8_t)22)</computeroutput></para>
<para>(ACMD22) Sends the number of the written (without errors) write blocks. Responds with 32bit+CRC data block. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00356">356</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga11c23db52041ccaca4a2dbcafca62c88"/><section>
    <title>SD_CMD_SD_APP_SEND_SCR</title>
<indexterm><primary>SD_CMD_SD_APP_SEND_SCR</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SEND_SCR</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SEND_SCR   ((uint8_t)51)</computeroutput></para>
<para>Reads the SD Configuration Register (SCR). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00360">360</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga6775fd69fe0e739c7464951bd6aacdf1"/><section>
    <title>SD_CMD_SD_APP_SET_CER_RES2</title>
<indexterm><primary>SD_CMD_SD_APP_SET_CER_RES2</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SET_CER_RES2</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SET_CER_RES2   ((uint8_t)47)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00372">372</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga120a1adc8c10961c831b197f0fd51f76"/><section>
    <title>SD_CMD_SD_APP_SET_CER_RN1</title>
<indexterm><primary>SD_CMD_SD_APP_SET_CER_RN1</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SET_CER_RN1</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SET_CER_RN1   ((uint8_t)45)</computeroutput></para>
<para>For SD card only </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00370">370</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga713f0d9a7c99b7becea80f232c024b59"/><section>
    <title>SD_CMD_SD_APP_SET_CLR_CARD_DETECT</title>
<indexterm><primary>SD_CMD_SD_APP_SET_CLR_CARD_DETECT</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_SET_CLR_CARD_DETECT</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_SET_CLR_CARD_DETECT   ((uint8_t)42)</computeroutput></para>
<para>(ACMD42) Connects/Disconnects the 50 KOhm pull-up resistor on CD/DAT3 (pin 1) of the card. </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00359">359</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga2984265566ee729869324cf5b842a601"/><section>
    <title>SD_CMD_SD_APP_STAUS</title>
<indexterm><primary>SD_CMD_SD_APP_STAUS</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_APP_STAUS</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_APP_STAUS   ((uint8_t)13)</computeroutput></para>
<para>(ACMD13) Sends the SD status. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00354">354</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gae3118ae546ea7ba60735b866552047ac"/><section>
    <title>SD_CMD_SD_ERASE_GRP_END</title>
<indexterm><primary>SD_CMD_SD_ERASE_GRP_END</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_ERASE_GRP_END</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_ERASE_GRP_END   ((uint8_t)33)</computeroutput></para>
<para>Sets the address of the last write block of the continuous range to be erased. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00332">332</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga34496e2b57973936b853bb1d20dc277d"/><section>
    <title>SD_CMD_SD_ERASE_GRP_START</title>
<indexterm><primary>SD_CMD_SD_ERASE_GRP_START</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SD_ERASE_GRP_START</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SD_ERASE_GRP_START   ((uint8_t)32)</computeroutput></para>
<para>Sets the address of the first write block to be erased. (For SD card only). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00331">331</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga09d3d2d61d003d6bf75c3fb128e86dbb"/><section>
    <title>SD_CMD_SDIO_RW_DIRECT</title>
<indexterm><primary>SD_CMD_SDIO_RW_DIRECT</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SDIO_RW_DIRECT</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SDIO_RW_DIRECT   ((uint8_t)52)</computeroutput></para>
<para>For SD I/O card only, reserved for security specification. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00361">361</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaf40f42039cf756a3805800b48e2790ed"/><section>
    <title>SD_CMD_SDIO_RW_EXTENDED</title>
<indexterm><primary>SD_CMD_SDIO_RW_EXTENDED</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SDIO_RW_EXTENDED</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SDIO_RW_EXTENDED   ((uint8_t)53)</computeroutput></para>
<para>For SD I/O card only, reserved for security specification. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00362">362</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga5f4e5909200ef9eb61ac2252f4099360"/><section>
    <title>SD_CMD_SDIO_SEN_OP_COND</title>
<indexterm><primary>SD_CMD_SDIO_SEN_OP_COND</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SDIO_SEN_OP_COND</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SDIO_SEN_OP_COND   ((uint8_t)5)</computeroutput></para>
<para>Sends host capacity support information (HCS) and asks the accessed card to send its operating condition register (OCR) content in the response on the CMD line. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00301">301</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaf049767ff08cf35fcddef8f413964050"/><section>
    <title>SD_CMD_SEL_DESEL_CARD</title>
<indexterm><primary>SD_CMD_SEL_DESEL_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SEL_DESEL_CARD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SEL_DESEL_CARD   ((uint8_t)7)</computeroutput></para>
<para>Selects the card by its own relative address and gets deselected by any other address 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00303">303</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gad0df99cd4f523813b603109db94f07c6"/><section>
    <title>SD_CMD_SEND_CID</title>
<indexterm><primary>SD_CMD_SEND_CID</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SEND_CID</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SEND_CID   ((uint8_t)10)</computeroutput></para>
<para>Addressed card sends its card identification (CID) on the CMD line. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00307">307</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaffe6f096eefb62711d4ba298c4598e2e"/><section>
    <title>SD_CMD_SEND_CSD</title>
<indexterm><primary>SD_CMD_SEND_CSD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SEND_CSD</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SEND_CSD   ((uint8_t)9)</computeroutput></para>
<para>Addressed card sends its card specific data (CSD) on the CMD line. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00306">306</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga74eabc4acadc80ad0242d52942c8d76a"/><section>
    <title>SD_CMD_SEND_OP_COND</title>
<indexterm><primary>SD_CMD_SEND_OP_COND</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SEND_OP_COND</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SEND_OP_COND   ((uint8_t)1)</computeroutput></para>
<para>Sends host capacity support information and activates the card&apos;s initialization process. </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00296">296</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga4d58ed74fb20e34fb557fa97c1935fe3"/><section>
    <title>SD_CMD_SEND_STATUS</title>
<indexterm><primary>SD_CMD_SEND_STATUS</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SEND_STATUS</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SEND_STATUS   ((uint8_t)13)</computeroutput></para>
<para>Addressed card sends its status register. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00310">310</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gabeb680262be8cc173543ae8b1874c83d"/><section>
    <title>SD_CMD_SEND_WRITE_PROT</title>
<indexterm><primary>SD_CMD_SEND_WRITE_PROT</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SEND_WRITE_PROT</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SEND_WRITE_PROT   ((uint8_t)30)</computeroutput></para>
<para>Asks the card to send the status of the write protection bits. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00330">330</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga5dd52de3e95163402a5cd995620d4d01"/><section>
    <title>SD_CMD_SET_BLOCK_COUNT</title>
<indexterm><primary>SD_CMD_SET_BLOCK_COUNT</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SET_BLOCK_COUNT</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SET_BLOCK_COUNT   ((uint8_t)23)</computeroutput></para>
<para>Specify block count for CMD18 and CMD25. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00322">322</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga77edc6b67b0921f4473adc7b95039de3"/><section>
    <title>SD_CMD_SET_BLOCKLEN</title>
<indexterm><primary>SD_CMD_SET_BLOCKLEN</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SET_BLOCKLEN</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SET_BLOCKLEN   ((uint8_t)16)</computeroutput></para>
<para>Sets the block length (in bytes for SDSC) for all following block commands (read, write, lock). Default block length is fixed to 512 Bytes. Not effective for SDHS and SDXC. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00315">315</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga89e890726a09716bb1a5c6ef6d0d3d90"/><section>
    <title>SD_CMD_SET_DSR</title>
<indexterm><primary>SD_CMD_SET_DSR</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SET_DSR</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SET_DSR   ((uint8_t)4)</computeroutput></para>
<para>Programs the DSR of all cards. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00299">299</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaa7e0f4e84001656eac62b41179376a25"/><section>
    <title>SD_CMD_SET_REL_ADDR</title>
<indexterm><primary>SD_CMD_SET_REL_ADDR</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SET_REL_ADDR</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SET_REL_ADDR   ((uint8_t)3)</computeroutput></para>
<para>Asks the card to publish a new relative address (RCA). 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00298">298</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga7a35e2c3f9d6237bf7a3577225d077d8"/><section>
    <title>SD_CMD_SET_WRITE_PROT</title>
<indexterm><primary>SD_CMD_SET_WRITE_PROT</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_SET_WRITE_PROT</secondary></indexterm>
<para><computeroutput>#define SD_CMD_SET_WRITE_PROT   ((uint8_t)28)</computeroutput></para>
<para>Sets the write protection bit of the addressed group. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00328">328</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga45a924a12fc702bebac386ed429a60ff"/><section>
    <title>SD_CMD_STOP_TRANSMISSION</title>
<indexterm><primary>SD_CMD_STOP_TRANSMISSION</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_STOP_TRANSMISSION</secondary></indexterm>
<para><computeroutput>#define SD_CMD_STOP_TRANSMISSION   ((uint8_t)12)</computeroutput></para>
<para>Forces the card to stop transmission. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00309">309</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga6478634540db1fa3fcd044315d1238b5"/><section>
    <title>SD_CMD_WRITE_DAT_UNTIL_STOP</title>
<indexterm><primary>SD_CMD_WRITE_DAT_UNTIL_STOP</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_WRITE_DAT_UNTIL_STOP</secondary></indexterm>
<para><computeroutput>#define SD_CMD_WRITE_DAT_UNTIL_STOP   ((uint8_t)20)</computeroutput></para>
<para>Speed class control command. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00321">321</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gafe82a884b2692654c9862bb25b8706ce"/><section>
    <title>SD_CMD_WRITE_MULT_BLOCK</title>
<indexterm><primary>SD_CMD_WRITE_MULT_BLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_WRITE_MULT_BLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_WRITE_MULT_BLOCK   ((uint8_t)25)</computeroutput></para>
<para>Continuously writes blocks of data until a STOP_TRANSMISSION follows. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00325">325</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga20a1c8427ec19835fe2782ec8febd5ca"/><section>
    <title>SD_CMD_WRITE_SINGLE_BLOCK</title>
<indexterm><primary>SD_CMD_WRITE_SINGLE_BLOCK</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SD_CMD_WRITE_SINGLE_BLOCK</secondary></indexterm>
<para><computeroutput>#define SD_CMD_WRITE_SINGLE_BLOCK   ((uint8_t)24)</computeroutput></para>
<para>Writes single block of size selected by SET_BLOCKLEN in case of SDSC, and a block of fixed 512 bytes in case of SDHC and SDXC. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00324">324</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga56d085c2c9101ddbdca82e783a5c0380"/><section>
    <title>SECURE_DIGITAL_IO_CARD</title>
<indexterm><primary>SECURE_DIGITAL_IO_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SECURE_DIGITAL_IO_CARD</secondary></indexterm>
<para><computeroutput>#define SECURE_DIGITAL_IO_CARD   ((uint32_t)0x00000004)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00387">387</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gadee0691ba1aec81ee1893ae06e92f24d"/><section>
    <title>SECURE_DIGITAL_IO_COMBO_CARD</title>
<indexterm><primary>SECURE_DIGITAL_IO_COMBO_CARD</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>SECURE_DIGITAL_IO_COMBO_CARD</secondary></indexterm>
<para><computeroutput>#define SECURE_DIGITAL_IO_COMBO_CARD   ((uint32_t)0x00000006)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00389">389</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1ga17ac25bb857f597f7d116204dba680fe"/><section>
    <title>STD_CAPACITY_SD_CARD_V1_1</title>
<indexterm><primary>STD_CAPACITY_SD_CARD_V1_1</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>STD_CAPACITY_SD_CARD_V1_1</secondary></indexterm>
<para><computeroutput>#define STD_CAPACITY_SD_CARD_V1_1   ((uint32_t)0x00000000)</computeroutput></para><para>

<para>Supported SD Memory Cards. </para>
</para>
<para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00383">383</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
<anchor xml:id="_group___s_d___exported___constants_1gaf601977dbd0ccffc168a727e3683ac9a"/><section>
    <title>STD_CAPACITY_SD_CARD_V2_0</title>
<indexterm><primary>STD_CAPACITY_SD_CARD_V2_0</primary><secondary>SD_Exported_Constants</secondary></indexterm>
<indexterm><primary>SD_Exported_Constants</primary><secondary>STD_CAPACITY_SD_CARD_V2_0</secondary></indexterm>
<para><computeroutput>#define STD_CAPACITY_SD_CARD_V2_0   ((uint32_t)0x00000001)</computeroutput></para><para>
Definition at line <link linkend="_stm32f4xx__hal__sd_8h_source_1l00384">384</link> of file <link linkend="_stm32f4xx__hal__sd_8h_source">stm32f4xx_hal_sd.h</link>.</para>
</section>
</section>
</section>
