<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_p_i_8h_source" xml:lang="en-US">
<title>SPI.h</title>
<indexterm><primary>C:/Users/dayton.flores/OneDrive/Documents/School/CU/ECEN 5803/Project 1/Module 1/Code2/sqrt_approx/mbed/SPI.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__s_p_i_8h_source_1l00001"/>00001 <emphasis role="comment">/*&#32;mbed&#32;Microcontroller&#32;Library</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;2006-2013&#32;ARM&#32;Limited</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;Licensed&#32;under&#32;the&#32;Apache&#32;License,&#32;Version&#32;2.0&#32;(the&#32;&quot;License&quot;);</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except&#32;in&#32;compliance&#32;with&#32;the&#32;License.</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00007"/>00007 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;http://www.apache.org/licenses/LICENSE-2.0</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00009"/>00009 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00011"/>00011 <emphasis role="comment">&#32;*&#32;distributed&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;WITHOUT&#32;WARRANTIES&#32;OR&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;See&#32;the&#32;License&#32;for&#32;the&#32;specific&#32;language&#32;governing&#32;permissions&#32;and</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00014"/>00014 <emphasis role="comment">&#32;*&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00015"/>00015 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#ifndef&#32;MBED_SPI_H</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00017"/>00017 <emphasis role="preprocessor">#define&#32;MBED_SPI_H</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00018"/>00018 
<anchor xml:id="__s_p_i_8h_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_platform_8h">platform.h</link>&quot;</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00020"/>00020 
<anchor xml:id="__s_p_i_8h_source_1l00021"/>00021 <emphasis role="preprocessor">#if&#32;DEVICE_SPI</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00022"/>00022 
<anchor xml:id="__s_p_i_8h_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_spi__api_8h">spi_api.h</link>&quot;</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00024"/>00024 
<anchor xml:id="__s_p_i_8h_source_1l00025"/>00025 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacembed">mbed</link>&#32;{
<anchor xml:id="__s_p_i_8h_source_1l00026"/>00026 
<anchor xml:id="__s_p_i_8h_source_1l00047"/>00047 <emphasis role="keyword">class&#32;</emphasis>SPI&#32;{
<anchor xml:id="__s_p_i_8h_source_1l00048"/>00048 
<anchor xml:id="__s_p_i_8h_source_1l00049"/>00049 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__s_p_i_8h_source_1l00050"/>00050 
<anchor xml:id="__s_p_i_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;SPI(<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;mosi,&#32;<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;miso,&#32;<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;sclk,&#32;<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1">PinName</link>&#32;_unused=<link linkend="__pin_names_8h_1a5ceb873075d76667eb54dc6a7d2734d1a3dbd1016ea99d087d747530418b89a01">NC</link>);
<anchor xml:id="__s_p_i_8h_source_1l00063"/>00063 
<anchor xml:id="__s_p_i_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;format(<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode&#32;=&#32;0);
<anchor xml:id="__s_p_i_8h_source_1l00079"/>00079 
<anchor xml:id="__s_p_i_8h_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;frequency(<emphasis role="keywordtype">int</emphasis>&#32;hz&#32;=&#32;1000000);
<anchor xml:id="__s_p_i_8h_source_1l00085"/>00085 
<anchor xml:id="__s_p_i_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;write(<emphasis role="keywordtype">int</emphasis>&#32;value);
<anchor xml:id="__s_p_i_8h_source_1l00094"/>00094 
<anchor xml:id="__s_p_i_8h_source_1l00095"/>00095 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__s_p_i_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;~SPI()&#32;{
<anchor xml:id="__s_p_i_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;}
<anchor xml:id="__s_p_i_8h_source_1l00098"/>00098 
<anchor xml:id="__s_p_i_8h_source_1l00099"/>00099 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__s_p_i_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;spi_t&#32;_spi;
<anchor xml:id="__s_p_i_8h_source_1l00101"/>00101 
<anchor xml:id="__s_p_i_8h_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;aquire(<emphasis role="keywordtype">void</emphasis>);
<anchor xml:id="__s_p_i_8h_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;SPI&#32;*_owner;
<anchor xml:id="__s_p_i_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_bits;
<anchor xml:id="__s_p_i_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_mode;
<anchor xml:id="__s_p_i_8h_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_hz;
<anchor xml:id="__s_p_i_8h_source_1l00107"/>00107 };
<anchor xml:id="__s_p_i_8h_source_1l00108"/>00108 
<anchor xml:id="__s_p_i_8h_source_1l00109"/>00109 }&#32;<emphasis role="comment">//&#32;namespace&#32;mbed</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00110"/>00110 
<anchor xml:id="__s_p_i_8h_source_1l00111"/>00111 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__s_p_i_8h_source_1l00112"/>00112 
<anchor xml:id="__s_p_i_8h_source_1l00113"/>00113 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
